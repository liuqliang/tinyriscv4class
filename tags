!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Verilog	b,block	/blocks (begin, fork)/
!_TAG_KIND_DESCRIPTION!Verilog	c,constant	/constants (parameter, specparam)/
!_TAG_KIND_DESCRIPTION!Verilog	d,define	/text macros/
!_TAG_KIND_DESCRIPTION!Verilog	e,event	/events/
!_TAG_KIND_DESCRIPTION!Verilog	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Verilog	i,instance	/instances of module/
!_TAG_KIND_DESCRIPTION!Verilog	m,module	/modules/
!_TAG_KIND_DESCRIPTION!Verilog	n,net	/net data types/
!_TAG_KIND_DESCRIPTION!Verilog	p,port	/ports/
!_TAG_KIND_DESCRIPTION!Verilog	r,register	/variable data types/
!_TAG_KIND_DESCRIPTION!Verilog	t,task	/tasks/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!Verilog	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	D:/coding/github/tinyriscv/tinyriscv4class/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!Verilog!module	decl	/declaring instances/
A0	rtl/perips/PWM.v	/^    reg [31:0] A0, A1, A2, A3;$/;"	r	module:PWM
A1	rtl/perips/PWM.v	/^    reg [31:0] A0, A1, A2, A3;$/;"	r	module:PWM
A2	rtl/perips/PWM.v	/^    reg [31:0] A0, A1, A2, A3;$/;"	r	module:PWM
A3	rtl/perips/PWM.v	/^    reg [31:0] A0, A1, A2, A3;$/;"	r	module:PWM
ABSTRACTCS	rtl/debug/jtag_dm.v	/^    localparam ABSTRACTCS = 6'h16;$/;"	c	module:jtag_dm
B0	rtl/perips/PWM.v	/^    reg [31:0] B0, B1, B2, B3;$/;"	r	module:PWM
B1	rtl/perips/PWM.v	/^    reg [31:0] B0, B1, B2, B3;$/;"	r	module:PWM
B2	rtl/perips/PWM.v	/^    reg [31:0] B0, B1, B2, B3;$/;"	r	module:PWM
B3	rtl/perips/PWM.v	/^    reg [31:0] B0, B1, B2, B3;$/;"	r	module:PWM
BAUD_115200	rtl/perips/uart.v	/^    localparam BAUD_115200 = 32'h1B8;$/;"	c	module:uart
C	rtl/perips/PWM.v	/^    reg [31:0] C;$/;"	r	module:PWM
CAPTURE_DR	rtl/debug/jtag_driver.v	/^    parameter CAPTURE_DR        = 4'h3;$/;"	c	module:jtag_driver
CAPTURE_IR	rtl/debug/jtag_driver.v	/^    parameter CAPTURE_IR        = 4'hA;$/;"	c	module:jtag_driver
COMMAND	rtl/debug/jtag_dm.v	/^    localparam COMMAND    = 6'h17;$/;"	c	module:jtag_dm
CSR_CYCLE	rtl/core/defines.v	/^`define CSR_CYCLE   12'hc00$/;"	d
CSR_CYCLEH	rtl/core/defines.v	/^`define CSR_CYCLEH  12'hc80$/;"	d
CSR_MCAUSE	rtl/core/defines.v	/^`define CSR_MCAUSE  12'h342$/;"	d
CSR_MEPC	rtl/core/defines.v	/^`define CSR_MEPC    12'h341$/;"	d
CSR_MIE	rtl/core/defines.v	/^`define CSR_MIE     12'h304$/;"	d
CSR_MSCRATCH	rtl/core/defines.v	/^`define CSR_MSCRATCH 12'h340$/;"	d
CSR_MSTATUS	rtl/core/defines.v	/^`define CSR_MSTATUS 12'h300$/;"	d
CSR_MTVEC	rtl/core/defines.v	/^`define CSR_MTVEC   12'h305$/;"	d
ChipDisable	rtl/core/defines.v	/^`define ChipDisable 1'b0$/;"	d
ChipEnable	rtl/core/defines.v	/^`define ChipEnable 1'b1$/;"	d
CpuResetAddr	rtl/core/defines.v	/^`define CpuResetAddr 32'h0$/;"	d
DATA0	rtl/debug/jtag_dm.v	/^    localparam DATA0      = 6'h04;$/;"	c	module:jtag_dm
DCSR	rtl/debug/jtag_dm.v	/^    localparam DCSR       = 16'h7b0;$/;"	c	module:jtag_dm
DMCONTROL	rtl/debug/jtag_dm.v	/^    localparam DMCONTROL  = 6'h10;$/;"	c	module:jtag_dm
DMI_ADDR_BITS	rtl/debug/jtag_dm.v	/^    parameter DMI_ADDR_BITS = 6,$/;"	c	module:jtag_dm
DMI_ADDR_BITS	rtl/debug/jtag_driver.v	/^    parameter DMI_ADDR_BITS = 6,$/;"	c	module:jtag_driver
DMI_ADDR_BITS	rtl/debug/jtag_top.v	/^    parameter DMI_ADDR_BITS = 6,$/;"	c	module:jtag_top
DMI_DATA_BITS	rtl/debug/jtag_dm.v	/^    parameter DMI_DATA_BITS = 32,$/;"	c	module:jtag_dm
DMI_DATA_BITS	rtl/debug/jtag_driver.v	/^    parameter DMI_DATA_BITS = 32,$/;"	c	module:jtag_driver
DMI_DATA_BITS	rtl/debug/jtag_top.v	/^    parameter DMI_DATA_BITS = 32,$/;"	c	module:jtag_top
DMI_OP_BITS	rtl/debug/jtag_dm.v	/^    parameter DMI_OP_BITS = 2)($/;"	c	module:jtag_dm
DMI_OP_BITS	rtl/debug/jtag_driver.v	/^    parameter DMI_OP_BITS = 2)($/;"	c	module:jtag_driver
DMI_OP_BITS	rtl/debug/jtag_top.v	/^    parameter DMI_OP_BITS = 2)($/;"	c	module:jtag_top
DMSTATUS	rtl/debug/jtag_dm.v	/^    localparam DMSTATUS   = 6'h11;$/;"	c	module:jtag_dm
DM_RESP_BITS	rtl/debug/jtag_dm.v	/^    parameter DM_RESP_BITS = DMI_ADDR_BITS + DMI_DATA_BITS + DMI_OP_BITS;$/;"	c	module:jtag_dm
DM_RESP_BITS	rtl/debug/jtag_driver.v	/^    parameter DM_RESP_BITS = DMI_ADDR_BITS + DMI_DATA_BITS + DMI_OP_BITS;$/;"	c	module:jtag_driver
DM_RESP_BITS	rtl/debug/jtag_top.v	/^    parameter DM_RESP_BITS = DMI_ADDR_BITS + DMI_DATA_BITS + DMI_OP_BITS;$/;"	c	module:jtag_top
DM_RESP_INVALID	rtl/debug/jtag_dm.v	/^`define DM_RESP_INVALID   1'b0$/;"	d
DM_RESP_INVALID	rtl/debug/jtag_driver.v	/^`define DM_RESP_INVALID   1'b0$/;"	d
DM_RESP_VALID	rtl/debug/jtag_dm.v	/^`define DM_RESP_VALID     1'b1$/;"	d
DM_RESP_VALID	rtl/debug/jtag_driver.v	/^`define DM_RESP_VALID     1'b1$/;"	d
DP	rtl/utils/gen_buf.v	/^    parameter DP = 2,$/;"	c	module:gen_ticks_sync
DPC	rtl/debug/jtag_dm.v	/^    localparam DPC        = 16'h7b1;$/;"	c	module:jtag_dm
DTM_OP_NOP	rtl/debug/jtag_dm.v	/^`define DTM_OP_NOP        2'b00$/;"	d
DTM_OP_READ	rtl/debug/jtag_dm.v	/^`define DTM_OP_READ       2'b01$/;"	d
DTM_OP_WRITE	rtl/debug/jtag_dm.v	/^`define DTM_OP_WRITE      2'b10$/;"	d
DTM_REQ_BITS	rtl/debug/jtag_dm.v	/^    parameter DTM_REQ_BITS = DMI_ADDR_BITS + DMI_DATA_BITS + DMI_OP_BITS;$/;"	c	module:jtag_dm
DTM_REQ_BITS	rtl/debug/jtag_driver.v	/^    parameter DTM_REQ_BITS = DMI_ADDR_BITS + DMI_DATA_BITS + DMI_OP_BITS;$/;"	c	module:jtag_driver
DTM_REQ_BITS	rtl/debug/jtag_top.v	/^    parameter DTM_REQ_BITS = DMI_ADDR_BITS + DMI_DATA_BITS + DMI_OP_BITS;$/;"	c	module:jtag_top
DTM_REQ_INVALID	rtl/debug/jtag_dm.v	/^`define DTM_REQ_INVALID   1'b0$/;"	d
DTM_REQ_INVALID	rtl/debug/jtag_driver.v	/^`define DTM_REQ_INVALID   1'b0$/;"	d
DTM_REQ_VALID	rtl/debug/jtag_dm.v	/^`define DTM_REQ_VALID     1'b1$/;"	d
DTM_REQ_VALID	rtl/debug/jtag_driver.v	/^`define DTM_REQ_VALID     1'b1$/;"	d
DTM_VERSION	rtl/debug/jtag_driver.v	/^    parameter DTM_VERSION  = 4'h1;$/;"	c	module:jtag_driver
DW	rtl/utils/full_handshake_rx.v	/^    parameter DW = 32)(             \/\/ RX要接收数据的位宽$/;"	c	module:full_handshake_rx
DW	rtl/utils/full_handshake_tx.v	/^    parameter DW = 32)(             \/\/ TX要发送数据的位宽$/;"	c	module:full_handshake_tx
DW	rtl/utils/gen_buf.v	/^    parameter DW = 32)($/;"	c	module:gen_ticks_sync
DW	rtl/utils/gen_dff.v	/^    parameter DW = 32)($/;"	c	module:gen_en_dff
DW	rtl/utils/gen_dff.v	/^    parameter DW = 32)($/;"	c	module:gen_pipe_dff
DW	rtl/utils/gen_dff.v	/^    parameter DW = 32)($/;"	c	module:gen_rst_0_dff
DW	rtl/utils/gen_dff.v	/^    parameter DW = 32)($/;"	c	module:gen_rst_1_dff
DW	rtl/utils/gen_dff.v	/^    parameter DW = 32)($/;"	c	module:gen_rst_def_dff
DivResultNotReady	rtl/core/defines.v	/^`define DivResultNotReady 1'b0$/;"	d
DivResultReady	rtl/core/defines.v	/^`define DivResultReady 1'b1$/;"	d
DivStart	rtl/core/defines.v	/^`define DivStart 1'b1$/;"	d
DivStop	rtl/core/defines.v	/^`define DivStop 1'b0$/;"	d
DoubleRegBus	rtl/core/defines.v	/^`define DoubleRegBus 63:0$/;"	d
EXIT1_DR	rtl/debug/jtag_driver.v	/^    parameter EXIT1_DR          = 4'h5;$/;"	c	module:jtag_driver
EXIT1_IR	rtl/debug/jtag_driver.v	/^    parameter EXIT1_IR          = 4'hC;$/;"	c	module:jtag_driver
EXIT2_DR	rtl/debug/jtag_driver.v	/^    parameter EXIT2_DR          = 4'h7;$/;"	c	module:jtag_driver
EXIT2_IR	rtl/debug/jtag_driver.v	/^    parameter EXIT2_IR          = 4'hE;$/;"	c	module:jtag_driver
False	rtl/core/defines.v	/^`define False 1'b0$/;"	d
GPIO_CTRL	rtl/perips/gpio.v	/^    localparam GPIO_CTRL = 4'h0;$/;"	c	module:gpio
GPIO_DATA	rtl/perips/gpio.v	/^    localparam GPIO_DATA = 4'h4;$/;"	c	module:gpio
HARTINFO	rtl/debug/jtag_dm.v	/^    localparam HARTINFO   = 6'h12;$/;"	c	module:jtag_dm
HoldDisable	rtl/core/defines.v	/^`define HoldDisable 1'b0$/;"	d
HoldEnable	rtl/core/defines.v	/^`define HoldEnable 1'b1$/;"	d
Hold_Flag_Bus	rtl/core/defines.v	/^`define Hold_Flag_Bus   2:0$/;"	d
Hold_Id	rtl/core/defines.v	/^`define Hold_Id   3'b011$/;"	d
Hold_If	rtl/core/defines.v	/^`define Hold_If   3'b010$/;"	d
Hold_None	rtl/core/defines.v	/^`define Hold_None 3'b000$/;"	d
Hold_Pc	rtl/core/defines.v	/^`define Hold_Pc   3'b001$/;"	d
I2C	rtl/perips/I2C.v	/^module I2C ($/;"	m
IDCODE_MANUFLD	rtl/debug/jtag_driver.v	/^    parameter IDCODE_MANUFLD = 11'h537;$/;"	c	module:jtag_driver
IDCODE_PART_NUMBER	rtl/debug/jtag_driver.v	/^    parameter IDCODE_PART_NUMBER = 16'he200;$/;"	c	module:jtag_driver
IDCODE_VERSION	rtl/debug/jtag_driver.v	/^    parameter IDCODE_VERSION  = 4'h1;$/;"	c	module:jtag_driver
INST_ADDI	rtl/core/defines.v	/^`define INST_ADDI   3'b000$/;"	d
INST_ADD_SUB	rtl/core/defines.v	/^`define INST_ADD_SUB 3'b000$/;"	d
INST_AND	rtl/core/defines.v	/^`define INST_AND    3'b111$/;"	d
INST_ANDI	rtl/core/defines.v	/^`define INST_ANDI   3'b111$/;"	d
INST_AUIPC	rtl/core/defines.v	/^`define INST_AUIPC  7'b0010111$/;"	d
INST_BEQ	rtl/core/defines.v	/^`define INST_BEQ    3'b000$/;"	d
INST_BGE	rtl/core/defines.v	/^`define INST_BGE    3'b101$/;"	d
INST_BGEU	rtl/core/defines.v	/^`define INST_BGEU   3'b111$/;"	d
INST_BLT	rtl/core/defines.v	/^`define INST_BLT    3'b100$/;"	d
INST_BLTU	rtl/core/defines.v	/^`define INST_BLTU   3'b110$/;"	d
INST_BNE	rtl/core/defines.v	/^`define INST_BNE    3'b001$/;"	d
INST_CSR	rtl/core/defines.v	/^`define INST_CSR    7'b1110011$/;"	d
INST_CSRRC	rtl/core/defines.v	/^`define INST_CSRRC  3'b011$/;"	d
INST_CSRRCI	rtl/core/defines.v	/^`define INST_CSRRCI 3'b111$/;"	d
INST_CSRRS	rtl/core/defines.v	/^`define INST_CSRRS  3'b010$/;"	d
INST_CSRRSI	rtl/core/defines.v	/^`define INST_CSRRSI 3'b110$/;"	d
INST_CSRRW	rtl/core/defines.v	/^`define INST_CSRRW  3'b001$/;"	d
INST_CSRRWI	rtl/core/defines.v	/^`define INST_CSRRWI 3'b101$/;"	d
INST_DIV	rtl/core/defines.v	/^`define INST_DIV    3'b100$/;"	d
INST_DIVU	rtl/core/defines.v	/^`define INST_DIVU   3'b101$/;"	d
INST_EBREAK	rtl/core/defines.v	/^`define INST_EBREAK 32'h00100073$/;"	d
INST_ECALL	rtl/core/defines.v	/^`define INST_ECALL  32'h73$/;"	d
INST_EXT	rtl/core/defines.v	/^`define INST_EXT    7'b0101111$/;"	d
INST_FENCE	rtl/core/defines.v	/^`define INST_FENCE  7'b0001111$/;"	d
INST_IF	rtl/core/defines.v	/^`define INST_IF     3'b010$/;"	d
INST_JAL	rtl/core/defines.v	/^`define INST_JAL    7'b1101111$/;"	d
INST_JALR	rtl/core/defines.v	/^`define INST_JALR   7'b1100111$/;"	d
INST_LB	rtl/core/defines.v	/^`define INST_LB     3'b000$/;"	d
INST_LBU	rtl/core/defines.v	/^`define INST_LBU    3'b100$/;"	d
INST_LH	rtl/core/defines.v	/^`define INST_LH     3'b001$/;"	d
INST_LHU	rtl/core/defines.v	/^`define INST_LHU    3'b101$/;"	d
INST_LUI	rtl/core/defines.v	/^`define INST_LUI    7'b0110111$/;"	d
INST_LW	rtl/core/defines.v	/^`define INST_LW     3'b010$/;"	d
INST_MRET	rtl/core/defines.v	/^`define INST_MRET   32'h30200073$/;"	d
INST_MUL	rtl/core/defines.v	/^`define INST_MUL    3'b000$/;"	d
INST_MULH	rtl/core/defines.v	/^`define INST_MULH   3'b001$/;"	d
INST_MULHSU	rtl/core/defines.v	/^`define INST_MULHSU 3'b010$/;"	d
INST_MULHU	rtl/core/defines.v	/^`define INST_MULHU  3'b011$/;"	d
INST_NOP	rtl/core/defines.v	/^`define INST_NOP    32'h00000001$/;"	d
INST_NOP_OP	rtl/core/defines.v	/^`define INST_NOP_OP 7'b0000001$/;"	d
INST_OR	rtl/core/defines.v	/^`define INST_OR     3'b110$/;"	d
INST_ORI	rtl/core/defines.v	/^`define INST_ORI    3'b110$/;"	d
INST_REM	rtl/core/defines.v	/^`define INST_REM    3'b110$/;"	d
INST_REMU	rtl/core/defines.v	/^`define INST_REMU   3'b111$/;"	d
INST_RET	rtl/core/defines.v	/^`define INST_RET    32'h00008067$/;"	d
INST_RT	rtl/core/defines.v	/^`define INST_RT     3'b001$/;"	d
INST_SB	rtl/core/defines.v	/^`define INST_SB     3'b000$/;"	d
INST_SH	rtl/core/defines.v	/^`define INST_SH     3'b001$/;"	d
INST_SID	rtl/core/defines.v	/^`define INST_SID    3'b000$/;"	d
INST_SLL	rtl/core/defines.v	/^`define INST_SLL    3'b001$/;"	d
INST_SLLI	rtl/core/defines.v	/^`define INST_SLLI   3'b001$/;"	d
INST_SLT	rtl/core/defines.v	/^`define INST_SLT    3'b010$/;"	d
INST_SLTI	rtl/core/defines.v	/^`define INST_SLTI   3'b010$/;"	d
INST_SLTIU	rtl/core/defines.v	/^`define INST_SLTIU  3'b011$/;"	d
INST_SLTU	rtl/core/defines.v	/^`define INST_SLTU   3'b011$/;"	d
INST_SR	rtl/core/defines.v	/^`define INST_SR     3'b101$/;"	d
INST_SRI	rtl/core/defines.v	/^`define INST_SRI    3'b101$/;"	d
INST_SW	rtl/core/defines.v	/^`define INST_SW     3'b010$/;"	d
INST_TYPE_B	rtl/core/defines.v	/^`define INST_TYPE_B 7'b1100011$/;"	d
INST_TYPE_I	rtl/core/defines.v	/^`define INST_TYPE_I 7'b0010011$/;"	d
INST_TYPE_L	rtl/core/defines.v	/^`define INST_TYPE_L 7'b0000011$/;"	d
INST_TYPE_R_M	rtl/core/defines.v	/^`define INST_TYPE_R_M 7'b0110011$/;"	d
INST_TYPE_S	rtl/core/defines.v	/^`define INST_TYPE_S 7'b0100011$/;"	d
INST_XOR	rtl/core/defines.v	/^`define INST_XOR    3'b100$/;"	d
INST_XORI	rtl/core/defines.v	/^`define INST_XORI   3'b100$/;"	d
INT_ASSERT	rtl/core/defines.v	/^`define INT_ASSERT 1'b1$/;"	d
INT_BUS	rtl/core/defines.v	/^`define INT_BUS 7:0$/;"	d
INT_DEASSERT	rtl/core/defines.v	/^`define INT_DEASSERT 1'b0$/;"	d
INT_NONE	rtl/core/defines.v	/^`define INT_NONE 8'h0$/;"	d
INT_RET	rtl/core/defines.v	/^`define INT_RET 8'hff$/;"	d
INT_TIMER0	rtl/core/defines.v	/^`define INT_TIMER0 8'b00000001$/;"	d
INT_TIMER0_ENTRY_ADDR	rtl/core/defines.v	/^`define INT_TIMER0_ENTRY_ADDR 32'h4$/;"	d
IR_BITS	rtl/debug/jtag_driver.v	/^    parameter IR_BITS = 5;$/;"	c	module:jtag_driver
InstAddrBus	rtl/core/defines.v	/^`define InstAddrBus 31:0$/;"	d
InstBus	rtl/core/defines.v	/^`define InstBus 31:0$/;"	d
JumpDisable	rtl/core/defines.v	/^`define JumpDisable 1'b0$/;"	d
JumpEnable	rtl/core/defines.v	/^`define JumpEnable 1'b1$/;"	d
MemAddrBus	rtl/core/defines.v	/^`define MemAddrBus 31:0$/;"	d
MemBus	rtl/core/defines.v	/^`define MemBus 31:0$/;"	d
MemNum	rtl/core/defines.v	/^`define MemNum 16  \/\/ memory depth(how many words)$/;"	d
NoStop	rtl/core/defines.v	/^`define NoStop 1'b0$/;"	d
OP_SUCC	rtl/debug/jtag_dm.v	/^    localparam OP_SUCC = 2'b00;$/;"	c	module:jtag_dm
PAUSE_DR	rtl/debug/jtag_driver.v	/^    parameter PAUSE_DR          = 4'h6;$/;"	c	module:jtag_driver
PAUSE_IR	rtl/debug/jtag_driver.v	/^    parameter PAUSE_IR          = 4'hD;$/;"	c	module:jtag_driver
PWM	rtl/perips/PWM.v	/^module PWM ($/;"	m
REG_BYPASS	rtl/debug/jtag_driver.v	/^    parameter REG_BYPASS       = 5'b11111;$/;"	c	module:jtag_driver
REG_COUNT	rtl/perips/timer.v	/^    localparam REG_COUNT = 4'h4;$/;"	c	module:timer
REG_CTRL	rtl/perips/timer.v	/^    localparam REG_CTRL = 4'h0;$/;"	c	module:timer
REG_DMI	rtl/debug/jtag_driver.v	/^    parameter REG_DMI          = 5'b10001;$/;"	c	module:jtag_driver
REG_DTMCS	rtl/debug/jtag_driver.v	/^    parameter REG_DTMCS        = 5'b10000;$/;"	c	module:jtag_driver
REG_IDCODE	rtl/debug/jtag_driver.v	/^    parameter REG_IDCODE       = 5'b00001;$/;"	c	module:jtag_driver
REG_VALUE	rtl/perips/timer.v	/^    localparam REG_VALUE = 4'h8;$/;"	c	module:timer
RIB_ACK	rtl/core/defines.v	/^`define RIB_ACK 1'b1$/;"	d
RIB_NACK	rtl/core/defines.v	/^`define RIB_NACK 1'b0$/;"	d
RIB_NREQ	rtl/core/defines.v	/^`define RIB_NREQ 1'b0$/;"	d
RIB_REQ	rtl/core/defines.v	/^`define RIB_REQ 1'b1$/;"	d
ROM_START_ADDR	rtl/debug/uart_debug.v	/^`define ROM_START_ADDR          32'h0$/;"	d
RUN_TEST_IDLE	rtl/debug/jtag_driver.v	/^    parameter RUN_TEST_IDLE     = 4'h1;$/;"	c	module:jtag_driver
ReadDisable	rtl/core/defines.v	/^`define ReadDisable 1'b0$/;"	d
ReadEnable	rtl/core/defines.v	/^`define ReadEnable 1'b1$/;"	d
RegAddrBus	rtl/core/defines.v	/^`define RegAddrBus 4:0$/;"	d
RegBus	rtl/core/defines.v	/^`define RegBus 31:0$/;"	d
RegNum	rtl/core/defines.v	/^`define RegNum 32        \/\/ reg num$/;"	d
RegNumLog2	rtl/core/defines.v	/^`define RegNumLog2 5$/;"	d
RegWidth	rtl/core/defines.v	/^`define RegWidth 32$/;"	d
RomNum	rtl/core/defines.v	/^`define RomNum 256  \/\/ rom depth(how many words)$/;"	d
RstDisable	rtl/core/defines.v	/^`define RstDisable 1'b1$/;"	d
RstEnable	rtl/core/defines.v	/^`define RstEnable 1'b0$/;"	d
SBADDRESS0	rtl/debug/jtag_dm.v	/^    localparam SBADDRESS0 = 6'h39;$/;"	c	module:jtag_dm
SBCS	rtl/debug/jtag_dm.v	/^    localparam SBCS       = 6'h38;$/;"	c	module:jtag_dm
SBDATA0	rtl/debug/jtag_dm.v	/^    localparam SBDATA0    = 6'h3C;$/;"	c	module:jtag_dm
SELECT_DR	rtl/debug/jtag_driver.v	/^    parameter SELECT_DR         = 4'h2;$/;"	c	module:jtag_driver
SELECT_IR	rtl/debug/jtag_driver.v	/^    parameter SELECT_IR         = 4'h9;$/;"	c	module:jtag_driver
SHIFT_DR	rtl/debug/jtag_driver.v	/^    parameter SHIFT_DR          = 4'h4;$/;"	c	module:jtag_driver
SHIFT_IR	rtl/debug/jtag_driver.v	/^    parameter SHIFT_IR          = 4'hB;$/;"	c	module:jtag_driver
SHIFT_REG_BITS	rtl/debug/jtag_dm.v	/^    parameter SHIFT_REG_BITS = DTM_REQ_BITS;$/;"	c	module:jtag_dm
SHIFT_REG_BITS	rtl/debug/jtag_driver.v	/^    parameter SHIFT_REG_BITS = DTM_REQ_BITS;$/;"	c	module:jtag_driver
SID_done	rtl/perips/uart.v	/^    output reg SID_done,$/;"	p	module:uart
SID_start	rtl/perips/uart.v	/^    input wire SID_start$/;"	p	module:uart
SPI_CTRL	rtl/perips/spi.v	/^    localparam SPI_CTRL   = 4'h0;    \/\/ spi_ctrl寄存器地址偏移$/;"	c	module:spi
SPI_DATA	rtl/perips/spi.v	/^    localparam SPI_DATA   = 4'h4;    \/\/ spi_data寄存器地址偏移$/;"	c	module:spi
SPI_STATUS	rtl/perips/spi.v	/^    localparam SPI_STATUS = 4'h8;    \/\/ spi_status寄存器地址偏移$/;"	c	module:spi
STATE_ASSERT	rtl/utils/full_handshake_tx.v	/^    localparam STATE_ASSERT   = 3'b010;$/;"	c	module:full_handshake_tx
STATE_CALC	rtl/core/div.v	/^    localparam STATE_CALC  = 4'b0100;$/;"	c	module:div
STATE_DEASSERT	rtl/utils/full_handshake_rx.v	/^    localparam STATE_DEASSERT = 2'b10;$/;"	c	module:full_handshake_rx
STATE_DEASSERT	rtl/utils/full_handshake_tx.v	/^    localparam STATE_DEASSERT = 3'b100;$/;"	c	module:full_handshake_tx
STATE_END	rtl/core/div.v	/^    localparam STATE_END   = 4'b1000;$/;"	c	module:div
STATE_IDLE	rtl/core/div.v	/^    localparam STATE_IDLE  = 4'b0001;$/;"	c	module:div
STATE_IDLE	rtl/utils/full_handshake_rx.v	/^    localparam STATE_IDLE     = 2'b01;$/;"	c	module:full_handshake_rx
STATE_IDLE	rtl/utils/full_handshake_tx.v	/^    localparam STATE_IDLE     = 3'b001;$/;"	c	module:full_handshake_tx
STATE_START	rtl/core/div.v	/^    localparam STATE_START = 4'b0010;$/;"	c	module:div
S_CLEAR_UART_RX_OVER_FLAG	rtl/debug/uart_debug.v	/^    localparam S_CLEAR_UART_RX_OVER_FLAG = 14'h0004;$/;"	c	module:uart_debug
S_CRC_CALC	rtl/debug/uart_debug.v	/^    localparam S_CRC_CALC                = 14'h0800;$/;"	c	module:uart_debug
S_CRC_END	rtl/debug/uart_debug.v	/^    localparam S_CRC_END                 = 14'h1000;$/;"	c	module:uart_debug
S_CRC_START	rtl/debug/uart_debug.v	/^    localparam S_CRC_START               = 14'h0400;$/;"	c	module:uart_debug
S_CSR_IDLE	rtl/core/clint.v	/^    localparam S_CSR_IDLE            = 5'b00001;$/;"	c	module:clint
S_CSR_MCAUSE	rtl/core/clint.v	/^    localparam S_CSR_MCAUSE          = 5'b10000;$/;"	c	module:clint
S_CSR_MEPC	rtl/core/clint.v	/^    localparam S_CSR_MEPC            = 5'b00100;$/;"	c	module:clint
S_CSR_MSTATUS	rtl/core/clint.v	/^    localparam S_CSR_MSTATUS         = 5'b00010;$/;"	c	module:clint
S_CSR_MSTATUS_MRET	rtl/core/clint.v	/^    localparam S_CSR_MSTATUS_MRET    = 5'b01000;$/;"	c	module:clint
S_GET_BYTE	rtl/debug/uart_debug.v	/^    localparam S_GET_BYTE                = 14'h0020;$/;"	c	module:uart_debug
S_IDLE	rtl/debug/uart_debug.v	/^    localparam S_IDLE                    = 14'h0001;$/;"	c	module:uart_debug
S_IDLE	rtl/perips/uart.v	/^    localparam S_IDLE       = 4'b0001;$/;"	c	module:uart
S_INIT_UART_BAUD	rtl/debug/uart_debug.v	/^    localparam S_INIT_UART_BAUD          = 14'h0002;$/;"	c	module:uart_debug
S_INT_ASYNC_ASSERT	rtl/core/clint.v	/^    localparam S_INT_ASYNC_ASSERT    = 4'b0100;$/;"	c	module:clint
S_INT_IDLE	rtl/core/clint.v	/^    localparam S_INT_IDLE            = 4'b0001;$/;"	c	module:clint
S_INT_MRET	rtl/core/clint.v	/^    localparam S_INT_MRET            = 4'b1000;$/;"	c	module:clint
S_INT_SYNC_ASSERT	rtl/core/clint.v	/^    localparam S_INT_SYNC_ASSERT     = 4'b0010;$/;"	c	module:clint
S_REC_FIRST_PACKET	rtl/debug/uart_debug.v	/^    localparam S_REC_FIRST_PACKET        = 14'h0040;$/;"	c	module:uart_debug
S_REC_REMAIN_PACKET	rtl/debug/uart_debug.v	/^    localparam S_REC_REMAIN_PACKET       = 14'h0080;$/;"	c	module:uart_debug
S_SEND_ACK	rtl/debug/uart_debug.v	/^    localparam S_SEND_ACK                = 14'h0100;$/;"	c	module:uart_debug
S_SEND_BYTE	rtl/perips/uart.v	/^    localparam S_SEND_BYTE  = 4'b0100;$/;"	c	module:uart
S_SEND_NAK	rtl/debug/uart_debug.v	/^    localparam S_SEND_NAK                = 14'h0200;$/;"	c	module:uart_debug
S_START	rtl/perips/uart.v	/^    localparam S_START      = 4'b0010;$/;"	c	module:uart
S_STOP	rtl/perips/uart.v	/^    localparam S_STOP       = 4'b1000;$/;"	c	module:uart
S_WAIT_BYTE	rtl/debug/uart_debug.v	/^    localparam S_WAIT_BYTE               = 14'h0008;$/;"	c	module:uart_debug
S_WAIT_BYTE2	rtl/debug/uart_debug.v	/^    localparam S_WAIT_BYTE2              = 14'h0010;$/;"	c	module:uart_debug
S_WRITE_MEM	rtl/debug/uart_debug.v	/^    localparam S_WRITE_MEM               = 14'h2000;$/;"	c	module:uart_debug
Stop	rtl/core/defines.v	/^`define Stop 1'b1$/;"	d
TEST_LOGIC_RESET	rtl/debug/jtag_driver.v	/^    parameter TEST_LOGIC_RESET  = 4'h0;$/;"	c	module:jtag_driver
True	rtl/core/defines.v	/^`define True 1'b1$/;"	d
UART_BAUD	rtl/perips/uart.v	/^    localparam UART_BAUD = 8'h8;$/;"	c	module:uart
UART_BAUD_115200	rtl/debug/uart_debug.v	/^`define UART_BAUD_115200        32'h1B8$/;"	d
UART_BAUD_REG	rtl/debug/uart_debug.v	/^`define UART_BAUD_REG           32'h30000008$/;"	d
UART_CTRL	rtl/perips/uart.v	/^    localparam UART_CTRL = 8'h0;$/;"	c	module:uart
UART_CTRL_REG	rtl/debug/uart_debug.v	/^`define UART_CTRL_REG           32'h30000000$/;"	d
UART_FIRST_PACKET_LEN	rtl/debug/uart_debug.v	/^`define UART_FIRST_PACKET_LEN   8'd35$/;"	d
UART_REMAIN_PACKET_LEN	rtl/debug/uart_debug.v	/^`define UART_REMAIN_PACKET_LEN  8'd35$/;"	d
UART_RESP_ACK	rtl/debug/uart_debug.v	/^`define UART_RESP_ACK           32'h6$/;"	d
UART_RESP_NAK	rtl/debug/uart_debug.v	/^`define UART_RESP_NAK           32'h15$/;"	d
UART_RXDATA	rtl/perips/uart.v	/^    localparam UART_RXDATA = 8'h10;$/;"	c	module:uart
UART_RX_OVER_FLAG	rtl/debug/uart_debug.v	/^`define UART_RX_OVER_FLAG       32'h2$/;"	d
UART_RX_REG	rtl/debug/uart_debug.v	/^`define UART_RX_REG             32'h30000010$/;"	d
UART_STATUS	rtl/perips/uart.v	/^    localparam UART_STATUS = 8'h4;$/;"	c	module:uart
UART_STATUS_REG	rtl/debug/uart_debug.v	/^`define UART_STATUS_REG         32'h30000004$/;"	d
UART_TXDATA	rtl/perips/uart.v	/^    localparam UART_TXDATA = 8'hc;$/;"	c	module:uart
UART_TX_BUSY_FLAG	rtl/debug/uart_debug.v	/^`define UART_TX_BUSY_FLAG       32'h1$/;"	d
UART_TX_REG	rtl/debug/uart_debug.v	/^`define UART_TX_REG             32'h3000000c$/;"	d
UPDATE_DR	rtl/debug/jtag_driver.v	/^    parameter UPDATE_DR         = 4'h8;$/;"	c	module:jtag_driver
UPDATE_IR	rtl/debug/jtag_driver.v	/^    parameter UPDATE_IR         = 4'hF;$/;"	c	module:jtag_driver
WriteDisable	rtl/core/defines.v	/^`define WriteDisable 1'b0$/;"	d
WriteEnable	rtl/core/defines.v	/^`define WriteEnable 1'b1$/;"	d
ZeroReg	rtl/core/defines.v	/^`define ZeroReg 5'h0$/;"	d
ZeroWord	rtl/core/defines.v	/^`define ZeroWord 32'h0$/;"	d
_ram	rtl/perips/ram.v	/^    reg[`MemBus] _ram[0:`MemNum - 1];$/;"	r	module:ram
_rom	rtl/perips/rom.v	/^    reg[`MemBus] _rom[0:`RomNum - 1];$/;"	r	module:rom
abstractcs	rtl/debug/jtag_dm.v	/^    reg[31:0] abstractcs;$/;"	r	module:jtag_dm
ack	rtl/utils/full_handshake_rx.v	/^    reg ack;$/;"	r	module:full_handshake_rx
ack	rtl/utils/full_handshake_tx.v	/^    reg ack;$/;"	r	module:full_handshake_tx
ack_d	rtl/utils/full_handshake_tx.v	/^    reg ack_d;$/;"	r	module:full_handshake_tx
ack_i	rtl/utils/full_handshake_tx.v	/^    input wire ack_i,               \/\/ RX端应答信号$/;"	p	module:full_handshake_tx
ack_o	rtl/utils/full_handshake_rx.v	/^    output wire ack_o,              \/\/ RX端应答TX端信号$/;"	p	module:full_handshake_rx
addr_bits	rtl/debug/jtag_driver.v	/^    wire[5:0] addr_bits = DMI_ADDR_BITS[5:0];$/;"	n	module:jtag_driver
addr_i	rtl/perips/gpio.v	/^    input wire[31:0] addr_i,$/;"	p	module:gpio
addr_i	rtl/perips/ram.v	/^    input wire[`MemAddrBus] addr_i,    \/\/ addr$/;"	p	module:ram
addr_i	rtl/perips/rom.v	/^    input wire[`MemAddrBus] addr_i,    \/\/ addr$/;"	p	module:rom
addr_i	rtl/perips/spi.v	/^    input wire[31:0] addr_i,$/;"	p	module:spi
addr_i	rtl/perips/timer.v	/^    input wire[31:0] addr_i,$/;"	p	module:timer
addr_i	rtl/perips/uart.v	/^    input wire[31:0] addr_i,$/;"	p	module:uart
address	rtl/debug/jtag_dm.v	/^    wire[DMI_ADDR_BITS-1:0] address = rx_data[DTM_REQ_BITS-1:DMI_DATA_BITS+DMI_OP_BITS];$/;"	n	module:jtag_dm
bit_cnt	rtl/perips/uart.v	/^    reg[3:0] bit_cnt;$/;"	r	module:uart
bit_index	rtl/perips/spi.v	/^    reg[3:0] bit_index;             \/\/ 数据bit索引$/;"	r	module:spi
busy_o	rtl/core/div.v	/^    output reg busy_o,                  \/\/ 正在运算信号$/;"	p	module:div
busy_response	rtl/debug/jtag_driver.v	/^    wire [SHIFT_REG_BITS - 1:0] busy_response;$/;"	n	module:jtag_driver
cause	rtl/core/clint.v	/^    reg[31:0] cause;$/;"	r	module:clint
clint	rtl/core/clint.v	/^module clint($/;"	m
clint_csr_mepc	rtl/core/csr_reg.v	/^    output wire[`RegBus] clint_csr_mepc,    \/\/ mepc$/;"	p	module:csr_reg
clint_csr_mstatus	rtl/core/csr_reg.v	/^    output wire[`RegBus] clint_csr_mstatus, \/\/ mstatus$/;"	p	module:csr_reg
clint_csr_mtvec	rtl/core/csr_reg.v	/^    output wire[`RegBus] clint_csr_mtvec,   \/\/ mtvec$/;"	p	module:csr_reg
clint_data_i	rtl/core/csr_reg.v	/^    input wire[`RegBus] clint_data_i,       \/\/ clint模块写寄存器数据$/;"	p	module:csr_reg
clint_data_o	rtl/core/csr_reg.v	/^    output reg[`RegBus] clint_data_o,       \/\/ clint模块读寄存器数据$/;"	p	module:csr_reg
clint_data_o	rtl/core/tinyriscv.v	/^    wire[`RegBus] clint_data_o;$/;"	n	module:tinyriscv
clint_hold_flag_o	rtl/core/tinyriscv.v	/^    wire clint_hold_flag_o;$/;"	n	module:tinyriscv
clint_int_addr_o	rtl/core/tinyriscv.v	/^    wire[`InstAddrBus] clint_int_addr_o;$/;"	n	module:tinyriscv
clint_int_assert_o	rtl/core/tinyriscv.v	/^    wire clint_int_assert_o;$/;"	n	module:tinyriscv
clint_raddr_i	rtl/core/csr_reg.v	/^    input wire[`MemAddrBus] clint_raddr_i,  \/\/ clint模块读寄存器地址$/;"	p	module:csr_reg
clint_raddr_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] clint_raddr_o;$/;"	n	module:tinyriscv
clint_waddr_i	rtl/core/csr_reg.v	/^    input wire[`MemAddrBus] clint_waddr_i,  \/\/ clint模块写寄存器地址$/;"	p	module:csr_reg
clint_waddr_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] clint_waddr_o;$/;"	n	module:tinyriscv
clint_we_i	rtl/core/csr_reg.v	/^    input wire clint_we_i,                  \/\/ clint模块写寄存器标志$/;"	p	module:csr_reg
clint_we_o	rtl/core/tinyriscv.v	/^    wire clint_we_o;$/;"	n	module:tinyriscv
clk	rtl/core/clint.v	/^    input wire clk,$/;"	p	module:clint
clk	rtl/core/csr_reg.v	/^    input wire clk,$/;"	p	module:csr_reg
clk	rtl/core/div.v	/^    input wire clk,$/;"	p	module:div
clk	rtl/core/id_ex.v	/^    input wire clk,$/;"	p	module:id_ex
clk	rtl/core/if_id.v	/^    input wire clk,$/;"	p	module:if_id
clk	rtl/core/pc_reg.v	/^    input wire clk,$/;"	p	module:pc_reg
clk	rtl/core/regs.v	/^    input wire clk,$/;"	p	module:regs
clk	rtl/core/rib.v	/^    input wire clk,$/;"	p	module:rib
clk	rtl/core/tinyriscv.v	/^    input wire clk,$/;"	p	module:tinyriscv
clk	rtl/debug/jtag_dm.v	/^    input wire clk;$/;"	p	module:jtag_dm
clk	rtl/debug/jtag_top.v	/^    input wire clk,$/;"	p	module:jtag_top
clk	rtl/debug/uart_debug.v	/^    input wire clk,                \/\/ 时钟信号$/;"	p	module:uart_debug
clk	rtl/perips/I2C.v	/^    input   clk,$/;"	p	module:I2C
clk	rtl/perips/PWM.v	/^    input   clk,$/;"	p	module:PWM
clk	rtl/perips/gpio.v	/^    input wire clk,$/;"	p	module:gpio
clk	rtl/perips/ram.v	/^    input wire clk,$/;"	p	module:ram
clk	rtl/perips/rom.v	/^    input wire clk,$/;"	p	module:rom
clk	rtl/perips/spi.v	/^    input wire clk,$/;"	p	module:spi
clk	rtl/perips/timer.v	/^    input wire clk,$/;"	p	module:timer
clk	rtl/perips/uart.v	/^	input wire clk,$/;"	p	module:uart
clk	rtl/soc/tinyriscv_soc_top.v	/^    input wire clk,$/;"	p	module:tinyriscv_soc_top
clk	rtl/utils/full_handshake_rx.v	/^    input wire clk,                 \/\/ RX端时钟信号$/;"	p	module:full_handshake_rx
clk	rtl/utils/full_handshake_tx.v	/^    input wire clk,                 \/\/ TX端时钟信号$/;"	p	module:full_handshake_tx
clk	rtl/utils/gen_buf.v	/^    input wire clk,$/;"	p	module:gen_ticks_sync
clk	rtl/utils/gen_dff.v	/^    input wire clk,$/;"	p	module:gen_en_dff
clk	rtl/utils/gen_dff.v	/^    input wire clk,$/;"	p	module:gen_pipe_dff
clk	rtl/utils/gen_dff.v	/^    input wire clk,$/;"	p	module:gen_rst_0_dff
clk	rtl/utils/gen_dff.v	/^    input wire clk,$/;"	p	module:gen_rst_1_dff
clk	rtl/utils/gen_dff.v	/^    input wire clk,$/;"	p	module:gen_rst_def_dff
clk_cnt	rtl/perips/spi.v	/^    reg[8:0] clk_cnt;               \/\/ 分频计数$/;"	r	module:spi
clock_freq	rtl/perips/I2C.v	/^    localparam  clock_freq = 50000000; \/\/ 50MHz$/;"	c	module:I2C
command	rtl/debug/jtag_dm.v	/^    reg[31:0] command;$/;"	r	module:jtag_dm
count	rtl/core/div.v	/^    reg[31:0] count;$/;"	r	module:div
counter0	rtl/perips/PWM.v	/^    reg [31:0] counter0, counter1, counter2, counter3;$/;"	r	module:PWM
counter0_next	rtl/perips/PWM.v	/^    wire    [31:0]  counter0_next, counter1_next, counter2_next, counter3_next; $/;"	n	module:PWM
counter1	rtl/perips/PWM.v	/^    reg [31:0] counter0, counter1, counter2, counter3;$/;"	r	module:PWM
counter1_next	rtl/perips/PWM.v	/^    wire    [31:0]  counter0_next, counter1_next, counter2_next, counter3_next; $/;"	n	module:PWM
counter2	rtl/perips/PWM.v	/^    reg [31:0] counter0, counter1, counter2, counter3;$/;"	r	module:PWM
counter2_next	rtl/perips/PWM.v	/^    wire    [31:0]  counter0_next, counter1_next, counter2_next, counter3_next; $/;"	n	module:PWM
counter3	rtl/perips/PWM.v	/^    reg [31:0] counter0, counter1, counter2, counter3;$/;"	r	module:PWM
counter3_next	rtl/perips/PWM.v	/^    wire    [31:0]  counter0_next, counter1_next, counter2_next, counter3_next; $/;"	n	module:PWM
crc_bit_index	rtl/debug/uart_debug.v	/^    reg[3:0] crc_bit_index;$/;"	r	module:uart_debug
crc_byte_index	rtl/debug/uart_debug.v	/^    reg[7:0] crc_byte_index;$/;"	r	module:uart_debug
crc_result	rtl/debug/uart_debug.v	/^    reg[15:0] crc_result;$/;"	r	module:uart_debug
csr_clint_csr_mepc	rtl/core/tinyriscv.v	/^    wire[`RegBus] csr_clint_csr_mepc;$/;"	n	module:tinyriscv
csr_clint_csr_mstatus	rtl/core/tinyriscv.v	/^    wire[`RegBus] csr_clint_csr_mstatus;$/;"	n	module:tinyriscv
csr_clint_csr_mtvec	rtl/core/tinyriscv.v	/^    wire[`RegBus] csr_clint_csr_mtvec;$/;"	n	module:tinyriscv
csr_clint_data_o	rtl/core/tinyriscv.v	/^    wire[`RegBus] csr_clint_data_o;$/;"	n	module:tinyriscv
csr_data_o	rtl/core/tinyriscv.v	/^    wire[`RegBus] csr_data_o;$/;"	n	module:tinyriscv
csr_global_int_en_o	rtl/core/tinyriscv.v	/^    wire csr_global_int_en_o;$/;"	n	module:tinyriscv
csr_mepc	rtl/core/clint.v	/^    input wire[`RegBus] csr_mepc,            \/\/ mepc寄存器$/;"	p	module:clint
csr_mstatus	rtl/core/clint.v	/^    input wire[`RegBus] csr_mstatus,         \/\/ mstatus寄存器$/;"	p	module:clint
csr_mtvec	rtl/core/clint.v	/^    input wire[`RegBus] csr_mtvec,           \/\/ mtvec寄存器$/;"	p	module:clint
csr_raddr_o	rtl/core/id.v	/^    output reg[`MemAddrBus] csr_raddr_o,     \/\/ 读CSR寄存器地址$/;"	p	module:id
csr_rdata	rtl/core/id_ex.v	/^    wire[`RegBus] csr_rdata;$/;"	n	module:id_ex
csr_rdata_ff	rtl/core/id_ex.v	/^    gen_pipe_dff #(32) csr_rdata_ff(clk, rst, hold_en, `ZeroWord, csr_rdata_i, csr_rdata);$/;"	i	module:id_ex	typeref:module:gen_pipe_dff
csr_rdata_i	rtl/core/ex.v	/^    input wire[`RegBus] csr_rdata_i,        \/\/ CSR寄存器输入数据$/;"	p	module:ex
csr_rdata_i	rtl/core/id.v	/^    input wire[`RegBus] csr_rdata_i,         \/\/ CSR寄存器输入数据$/;"	p	module:id
csr_rdata_i	rtl/core/id_ex.v	/^    input wire[`RegBus] csr_rdata_i,        \/\/ CSR寄存器读数据$/;"	p	module:id_ex
csr_rdata_o	rtl/core/id.v	/^    output reg[`RegBus] csr_rdata_o,         \/\/ CSR寄存器数据$/;"	p	module:id
csr_rdata_o	rtl/core/id_ex.v	/^    output wire[`RegBus] csr_rdata_o         \/\/ CSR寄存器读数据$/;"	p	module:id_ex
csr_reg	rtl/core/csr_reg.v	/^module csr_reg($/;"	m
csr_state	rtl/core/clint.v	/^    reg[4:0] csr_state;$/;"	r	module:clint
csr_waddr	rtl/core/id_ex.v	/^    wire[`MemAddrBus] csr_waddr;$/;"	n	module:id_ex
csr_waddr_ff	rtl/core/id_ex.v	/^    gen_pipe_dff #(32) csr_waddr_ff(clk, rst, hold_en, `ZeroWord, csr_waddr_i, csr_waddr);$/;"	i	module:id_ex	typeref:module:gen_pipe_dff
csr_waddr_i	rtl/core/ex.v	/^    input wire[`MemAddrBus] csr_waddr_i,    \/\/ 写CSR寄存器地址$/;"	p	module:ex
csr_waddr_i	rtl/core/id_ex.v	/^    input wire[`MemAddrBus] csr_waddr_i,    \/\/ 写CSR寄存器地址$/;"	p	module:id_ex
csr_waddr_o	rtl/core/ex.v	/^    output wire[`MemAddrBus] csr_waddr_o,   \/\/ 写CSR寄存器地址$/;"	p	module:ex
csr_waddr_o	rtl/core/id.v	/^    output reg[`MemAddrBus] csr_waddr_o      \/\/ 写CSR寄存器地址$/;"	p	module:id
csr_waddr_o	rtl/core/id_ex.v	/^    output wire[`MemAddrBus] csr_waddr_o,    \/\/ 写CSR寄存器地址$/;"	p	module:id_ex
csr_wdata_o	rtl/core/ex.v	/^    output reg[`RegBus] csr_wdata_o,        \/\/ 写CSR寄存器数据$/;"	p	module:ex
csr_we	rtl/core/id_ex.v	/^    wire csr_we;$/;"	n	module:id_ex
csr_we_ff	rtl/core/id_ex.v	/^    gen_pipe_dff #(1) csr_we_ff(clk, rst, hold_en, `WriteDisable, csr_we_i, csr_we);$/;"	i	module:id_ex	typeref:module:gen_pipe_dff
csr_we_i	rtl/core/ex.v	/^    input wire csr_we_i,                    \/\/ 是否写CSR寄存器$/;"	p	module:ex
csr_we_i	rtl/core/id_ex.v	/^    input wire csr_we_i,                    \/\/ 写CSR寄存器标志$/;"	p	module:id_ex
csr_we_o	rtl/core/ex.v	/^    output wire csr_we_o,                   \/\/ 是否要写CSR寄存器$/;"	p	module:ex
csr_we_o	rtl/core/id.v	/^    output reg csr_we_o,                     \/\/ 写CSR寄存器标志$/;"	p	module:id
csr_we_o	rtl/core/id_ex.v	/^    output wire csr_we_o,                    \/\/ 写CSR寄存器标志$/;"	p	module:id_ex
ctrl	rtl/core/ctrl.v	/^module ctrl($/;"	m
ctrl_hold_flag_o	rtl/core/tinyriscv.v	/^    wire[`Hold_Flag_Bus] ctrl_hold_flag_o;$/;"	n	module:tinyriscv
ctrl_jump_addr_o	rtl/core/tinyriscv.v	/^    wire[`InstAddrBus] ctrl_jump_addr_o;$/;"	n	module:tinyriscv
ctrl_jump_flag_o	rtl/core/tinyriscv.v	/^    wire ctrl_jump_flag_o;$/;"	n	module:tinyriscv
cycle	rtl/core/csr_reg.v	/^    reg[`DoubleRegBus] cycle;$/;"	r	module:csr_reg
cycle_cnt	rtl/perips/uart.v	/^    reg[15:0] cycle_cnt;$/;"	r	module:uart
data	rtl/debug/jtag_dm.v	/^    wire[DMI_DATA_BITS-1:0] data = rx_data[DMI_DATA_BITS+DMI_OP_BITS-1:DMI_OP_BITS];$/;"	n	module:jtag_dm
data0	rtl/debug/jtag_dm.v	/^    reg[31:0] data0;$/;"	r	module:jtag_dm
data_i	rtl/core/clint.v	/^    input wire[`RegBus] data_i,              \/\/ CSR寄存器输入数据$/;"	p	module:clint
data_i	rtl/core/csr_reg.v	/^    input wire[`RegBus] data_i,             \/\/ ex模块写寄存器数据$/;"	p	module:csr_reg
data_i	rtl/perips/gpio.v	/^    input wire[31:0] data_i,$/;"	p	module:gpio
data_i	rtl/perips/ram.v	/^    input wire[`MemBus] data_i,$/;"	p	module:ram
data_i	rtl/perips/rom.v	/^    input wire[`MemBus] data_i,$/;"	p	module:rom
data_i	rtl/perips/spi.v	/^    input wire[31:0] data_i,$/;"	p	module:spi
data_i	rtl/perips/timer.v	/^    input wire[31:0] data_i,$/;"	p	module:timer
data_i	rtl/perips/uart.v	/^    input wire[31:0] data_i,$/;"	p	module:uart
data_o	rtl/core/clint.v	/^    output reg[`RegBus] data_o,              \/\/ 写CSR寄存器数据$/;"	p	module:clint
data_o	rtl/core/csr_reg.v	/^    output reg[`RegBus] data_o              \/\/ ex模块读寄存器数据$/;"	p	module:csr_reg
data_o	rtl/perips/gpio.v	/^    output reg[31:0] data_o,$/;"	p	module:gpio
data_o	rtl/perips/ram.v	/^    output reg[`MemBus] data_o         \/\/ read data$/;"	p	module:ram
data_o	rtl/perips/rom.v	/^    output reg[`MemBus] data_o         \/\/ read data$/;"	p	module:rom
data_o	rtl/perips/spi.v	/^    output reg[31:0] data_o,$/;"	p	module:spi
data_o	rtl/perips/timer.v	/^    output reg[31:0] data_o,$/;"	p	module:timer
data_o	rtl/perips/uart.v	/^    output reg[31:0] data_o,$/;"	p	module:uart
dcsr	rtl/debug/jtag_dm.v	/^    reg[31:0] dcsr;$/;"	r	module:jtag_dm
debug_en_i	rtl/debug/uart_debug.v	/^    input wire debug_en_i,         \/\/ 模块使能信号$/;"	p	module:uart_debug
def_val	rtl/utils/gen_dff.v	/^    input wire[DW-1:0] def_val,$/;"	p	module:gen_pipe_dff
def_val	rtl/utils/gen_dff.v	/^    input wire[DW-1:0] def_val,$/;"	p	module:gen_rst_def_dff
din	rtl/utils/gen_buf.v	/^    input wire[DW-1:0] din,$/;"	p	module:gen_ticks_sync
din	rtl/utils/gen_dff.v	/^    input wire[DW-1:0] din,$/;"	p	module:gen_en_dff
din	rtl/utils/gen_dff.v	/^    input wire[DW-1:0] din,$/;"	p	module:gen_pipe_dff
din	rtl/utils/gen_dff.v	/^    input wire[DW-1:0] din,$/;"	p	module:gen_rst_0_dff
din	rtl/utils/gen_dff.v	/^    input wire[DW-1:0] din,$/;"	p	module:gen_rst_1_dff
din	rtl/utils/gen_dff.v	/^    input wire[DW-1:0] din,$/;"	p	module:gen_rst_def_dff
div	rtl/core/div.v	/^module div($/;"	m
div_busy_i	rtl/core/ex.v	/^    input wire div_busy_i,                  \/\/ 除法运算忙标志$/;"	p	module:ex
div_busy_o	rtl/core/tinyriscv.v	/^    wire div_busy_o;$/;"	n	module:tinyriscv
div_cnt	rtl/perips/spi.v	/^    wire[8:0] div_cnt;$/;"	n	module:spi
div_dividend_o	rtl/core/ex.v	/^    output reg[`RegBus] div_dividend_o,     \/\/ 被除数$/;"	p	module:ex
div_divisor_o	rtl/core/ex.v	/^    output reg[`RegBus] div_divisor_o,      \/\/ 除数$/;"	p	module:ex
div_hold_flag	rtl/core/ex.v	/^    reg div_hold_flag;$/;"	r	module:ex
div_jump_addr	rtl/core/ex.v	/^    reg[`InstAddrBus] div_jump_addr;$/;"	r	module:ex
div_jump_flag	rtl/core/ex.v	/^    reg div_jump_flag;$/;"	r	module:ex
div_op_o	rtl/core/ex.v	/^    output reg[2:0] div_op_o,               \/\/ 具体是哪一条除法指令$/;"	p	module:ex
div_ready_i	rtl/core/ex.v	/^    input wire div_ready_i,                 \/\/ 除法运算完成标志$/;"	p	module:ex
div_ready_o	rtl/core/tinyriscv.v	/^	wire div_ready_o;$/;"	n	module:tinyriscv
div_reg_waddr_i	rtl/core/ex.v	/^    input wire[`RegAddrBus] div_reg_waddr_i,\/\/ 除法运算结束后要写的寄存器地址$/;"	p	module:ex
div_reg_waddr_o	rtl/core/ex.v	/^    output reg[`RegAddrBus] div_reg_waddr_o,\/\/ 除法运算结束后要写的寄存器地址$/;"	p	module:ex
div_reg_waddr_o	rtl/core/tinyriscv.v	/^    wire[`RegAddrBus] div_reg_waddr_o;$/;"	n	module:tinyriscv
div_remain	rtl/core/div.v	/^    reg[`RegBus] div_remain;$/;"	r	module:div
div_result	rtl/core/div.v	/^    reg[`RegBus] div_result;$/;"	r	module:div
div_result_i	rtl/core/ex.v	/^    input wire[`RegBus] div_result_i,       \/\/ 除法运算结果$/;"	p	module:ex
div_result_o	rtl/core/tinyriscv.v	/^    wire[`RegBus] div_result_o;$/;"	n	module:tinyriscv
div_result_tmp	rtl/core/div.v	/^    wire[31:0] div_result_tmp = minuend_ge_divisor? ({div_result[30:0], 1'b1}): ({div_result[30:/;"	n	module:div
div_start	rtl/core/ex.v	/^    reg div_start;$/;"	r	module:ex
div_start_o	rtl/core/ex.v	/^    output wire div_start_o,                \/\/ 开始除法运算标志$/;"	p	module:ex
div_started_i	rtl/core/clint.v	/^    input wire div_started_i,$/;"	p	module:clint
div_waddr	rtl/core/ex.v	/^    reg[`RegAddrBus] div_waddr;$/;"	r	module:ex
div_wdata	rtl/core/ex.v	/^    reg[`RegBus] div_wdata;$/;"	r	module:ex
div_we	rtl/core/ex.v	/^    reg div_we;$/;"	r	module:ex
dividend_i	rtl/core/div.v	/^    input wire[`RegBus] dividend_i,      \/\/ 被除数$/;"	p	module:div
dividend_invert	rtl/core/div.v	/^    wire[31:0] dividend_invert = (-dividend_r);$/;"	n	module:div
dividend_r	rtl/core/div.v	/^    reg[`RegBus] dividend_r;$/;"	r	module:div
divisor_i	rtl/core/div.v	/^    input wire[`RegBus] divisor_i,       \/\/ 除数$/;"	p	module:div
divisor_invert	rtl/core/div.v	/^    wire[31:0] divisor_invert = (-divisor_r);$/;"	n	module:div
divisor_r	rtl/core/div.v	/^    reg[`RegBus] divisor_r;$/;"	r	module:div
dm_ack_i	rtl/debug/jtag_driver.v	/^    input wire dm_ack_i;$/;"	p	module:jtag_driver
dm_ack_o	rtl/debug/jtag_dm.v	/^    output wire dm_ack_o;$/;"	p	module:jtag_dm
dm_ack_o	rtl/debug/jtag_top.v	/^    wire dm_ack_o;$/;"	n	module:jtag_top
dm_halt_req	rtl/debug/jtag_dm.v	/^    reg dm_halt_req;$/;"	r	module:jtag_dm
dm_halt_req_o	rtl/debug/jtag_dm.v	/^    output wire dm_halt_req_o;$/;"	p	module:jtag_dm
dm_halt_req_o	rtl/debug/jtag_top.v	/^    wire dm_halt_req_o;$/;"	n	module:jtag_top
dm_is_busy	rtl/debug/jtag_driver.v	/^    reg dm_is_busy;$/;"	r	module:jtag_driver
dm_mem_addr	rtl/debug/jtag_dm.v	/^    reg[31:0] dm_mem_addr;$/;"	r	module:jtag_dm
dm_mem_addr_o	rtl/debug/jtag_dm.v	/^    output wire[31:0] dm_mem_addr_o;$/;"	p	module:jtag_dm
dm_mem_rdata_i	rtl/debug/jtag_dm.v	/^    input wire[31:0] dm_mem_rdata_i;$/;"	p	module:jtag_dm
dm_mem_wdata	rtl/debug/jtag_dm.v	/^    reg[31:0] dm_mem_wdata;$/;"	r	module:jtag_dm
dm_mem_wdata_o	rtl/debug/jtag_dm.v	/^    output wire[31:0] dm_mem_wdata_o;$/;"	p	module:jtag_dm
dm_mem_we	rtl/debug/jtag_dm.v	/^    reg dm_mem_we;$/;"	r	module:jtag_dm
dm_mem_we_o	rtl/debug/jtag_dm.v	/^    output wire dm_mem_we_o;$/;"	p	module:jtag_dm
dm_op_req_o	rtl/debug/jtag_dm.v	/^    output wire dm_op_req_o;$/;"	p	module:jtag_dm
dm_op_req_o	rtl/debug/jtag_top.v	/^    wire dm_op_req_o;$/;"	n	module:jtag_top
dm_reg_addr	rtl/debug/jtag_dm.v	/^    reg[4:0] dm_reg_addr;$/;"	r	module:jtag_dm
dm_reg_addr_o	rtl/debug/jtag_dm.v	/^    output wire[4:0] dm_reg_addr_o;$/;"	p	module:jtag_dm
dm_reg_rdata_i	rtl/debug/jtag_dm.v	/^    input wire[31:0] dm_reg_rdata_i;$/;"	p	module:jtag_dm
dm_reg_wdata	rtl/debug/jtag_dm.v	/^    reg[31:0] dm_reg_wdata;$/;"	r	module:jtag_dm
dm_reg_wdata_o	rtl/debug/jtag_dm.v	/^    output wire[31:0] dm_reg_wdata_o;$/;"	p	module:jtag_dm
dm_reg_we	rtl/debug/jtag_dm.v	/^    reg dm_reg_we;$/;"	r	module:jtag_dm
dm_reg_we_o	rtl/debug/jtag_dm.v	/^    output wire dm_reg_we_o;$/;"	p	module:jtag_dm
dm_reset_req	rtl/debug/jtag_dm.v	/^    reg dm_reset_req;$/;"	r	module:jtag_dm
dm_reset_req_o	rtl/debug/jtag_dm.v	/^    output wire dm_reset_req_o;$/;"	p	module:jtag_dm
dm_reset_req_o	rtl/debug/jtag_top.v	/^    wire dm_reset_req_o;$/;"	n	module:jtag_top
dm_resp_data	rtl/debug/jtag_dm.v	/^    wire[DM_RESP_BITS-1:0] dm_resp_data;$/;"	n	module:jtag_dm
dm_resp_data	rtl/debug/jtag_driver.v	/^    reg[DM_RESP_BITS - 1:0] dm_resp_data;$/;"	r	module:jtag_driver
dm_resp_data_i	rtl/debug/jtag_driver.v	/^    input wire[DM_RESP_BITS - 1:0] dm_resp_data_i;$/;"	p	module:jtag_driver
dm_resp_data_o	rtl/debug/jtag_dm.v	/^    output wire[DM_RESP_BITS-1:0] dm_resp_data_o;$/;"	p	module:jtag_dm
dm_resp_data_o	rtl/debug/jtag_top.v	/^    wire[DM_RESP_BITS-1:0] dm_resp_data_o;$/;"	n	module:jtag_top
dm_resp_i	rtl/debug/jtag_driver.v	/^    input wire dm_resp_i;$/;"	p	module:jtag_driver
dm_resp_valid_o	rtl/debug/jtag_dm.v	/^    output wire dm_resp_valid_o;$/;"	p	module:jtag_dm
dm_resp_valid_o	rtl/debug/jtag_top.v	/^    wire dm_resp_valid_o;$/;"	n	module:jtag_top
dmcontrol	rtl/debug/jtag_dm.v	/^    reg[31:0] dmcontrol;$/;"	r	module:jtag_dm
dmi_stat	rtl/debug/jtag_driver.v	/^    wire[1:0] dmi_stat;$/;"	n	module:jtag_driver
dmstatus	rtl/debug/jtag_dm.v	/^    reg[31:0] dmstatus;$/;"	r	module:jtag_dm
done	rtl/perips/spi.v	/^    reg done;                       \/\/ 传输完成信号$/;"	r	module:spi
dout	rtl/utils/gen_buf.v	/^    output wire[DW-1:0] dout$/;"	p	module:gen_ticks_sync
dp_is_0	rtl/utils/gen_buf.v	/^            if (i == 0) begin: dp_is_0$/;"	b	block:gen_ticks_sync.dp_width
dp_is_not_0	rtl/utils/gen_buf.v	/^            end else begin: dp_is_not_0$/;"	b	block:gen_ticks_sync.dp_width
dp_width	rtl/utils/gen_buf.v	/^        for (i = 0; i < DP; i = i + 1) begin: dp_width$/;"	b	module:gen_ticks_sync
dtm_ack_i	rtl/debug/jtag_dm.v	/^    input wire dtm_ack_i;$/;"	p	module:jtag_dm
dtm_ack_o	rtl/debug/jtag_driver.v	/^    output wire dtm_ack_o;$/;"	p	module:jtag_driver
dtm_ack_o	rtl/debug/jtag_top.v	/^    wire dtm_ack_o;$/;"	n	module:jtag_top
dtm_req_data	rtl/debug/jtag_driver.v	/^    reg[DTM_REQ_BITS - 1:0] dtm_req_data;$/;"	r	module:jtag_driver
dtm_req_data_i	rtl/debug/jtag_dm.v	/^    input wire[DTM_REQ_BITS-1:0] dtm_req_data_i;$/;"	p	module:jtag_dm
dtm_req_data_o	rtl/debug/jtag_driver.v	/^    output wire[DTM_REQ_BITS - 1:0] dtm_req_data_o;$/;"	p	module:jtag_driver
dtm_req_data_o	rtl/debug/jtag_top.v	/^    wire[DTM_REQ_BITS - 1:0] dtm_req_data_o;$/;"	n	module:jtag_top
dtm_req_valid	rtl/debug/jtag_driver.v	/^    reg dtm_req_valid;$/;"	r	module:jtag_driver
dtm_req_valid_i	rtl/debug/jtag_dm.v	/^    input wire dtm_req_valid_i;$/;"	p	module:jtag_dm
dtm_req_valid_o	rtl/debug/jtag_driver.v	/^    output wire dtm_req_valid_o;$/;"	p	module:jtag_driver
dtm_req_valid_o	rtl/debug/jtag_top.v	/^    wire dtm_req_valid_o;$/;"	n	module:jtag_top
dtm_reset	rtl/debug/jtag_driver.v	/^    wire dtm_reset;$/;"	n	module:jtag_driver
dtmcs	rtl/debug/jtag_driver.v	/^    wire[31:0] dtmcs;$/;"	n	module:jtag_driver
en	rtl/perips/spi.v	/^    reg en;                         \/\/ 使能，开始传输信号，传输期间一直有效$/;"	r	module:spi
en	rtl/utils/gen_dff.v	/^    input wire en,$/;"	p	module:gen_en_dff
ex	rtl/core/ex.v	/^module ex($/;"	m
ex_csr_waddr_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] ex_csr_waddr_o;$/;"	n	module:tinyriscv
ex_csr_wdata_o	rtl/core/tinyriscv.v	/^    wire[`RegBus] ex_csr_wdata_o;$/;"	n	module:tinyriscv
ex_csr_we_o	rtl/core/tinyriscv.v	/^    wire ex_csr_we_o;$/;"	n	module:tinyriscv
ex_div_dividend_o	rtl/core/tinyriscv.v	/^    wire[`RegBus] ex_div_dividend_o;$/;"	n	module:tinyriscv
ex_div_divisor_o	rtl/core/tinyriscv.v	/^    wire[`RegBus] ex_div_divisor_o;$/;"	n	module:tinyriscv
ex_div_op_o	rtl/core/tinyriscv.v	/^    wire[2:0] ex_div_op_o;$/;"	n	module:tinyriscv
ex_div_reg_waddr_o	rtl/core/tinyriscv.v	/^    wire[`RegAddrBus] ex_div_reg_waddr_o;$/;"	n	module:tinyriscv
ex_div_start_o	rtl/core/tinyriscv.v	/^    wire ex_div_start_o;$/;"	n	module:tinyriscv
ex_hold_flag_o	rtl/core/tinyriscv.v	/^    wire ex_hold_flag_o;$/;"	n	module:tinyriscv
ex_jump_addr_o	rtl/core/tinyriscv.v	/^    wire[`InstAddrBus] ex_jump_addr_o;$/;"	n	module:tinyriscv
ex_jump_flag_i	rtl/core/id.v	/^    input wire ex_jump_flag_i,               \/\/ 跳转标志$/;"	p	module:id
ex_jump_flag_o	rtl/core/tinyriscv.v	/^    wire ex_jump_flag_o;$/;"	n	module:tinyriscv
ex_mem_raddr_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] ex_mem_raddr_o;$/;"	n	module:tinyriscv
ex_mem_req_o	rtl/core/tinyriscv.v	/^    wire ex_mem_req_o;$/;"	n	module:tinyriscv
ex_mem_waddr_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] ex_mem_waddr_o;$/;"	n	module:tinyriscv
ex_mem_wdata_o	rtl/core/tinyriscv.v	/^    wire[`MemBus] ex_mem_wdata_o;$/;"	n	module:tinyriscv
ex_mem_we_o	rtl/core/tinyriscv.v	/^    wire ex_mem_we_o;$/;"	n	module:tinyriscv
ex_reg_waddr_o	rtl/core/tinyriscv.v	/^    wire[`RegAddrBus] ex_reg_waddr_o;$/;"	n	module:tinyriscv
ex_reg_wdata_o	rtl/core/tinyriscv.v	/^    wire[`RegBus] ex_reg_wdata_o;$/;"	n	module:tinyriscv
ex_reg_we_o	rtl/core/tinyriscv.v	/^    wire ex_reg_we_o;$/;"	n	module:tinyriscv
full_handshake_rx	rtl/utils/full_handshake_rx.v	/^module full_handshake_rx #($/;"	m
full_handshake_tx	rtl/utils/full_handshake_tx.v	/^module full_handshake_tx #($/;"	m
funct3	rtl/core/ex.v	/^    wire[2:0] funct3;$/;"	n	module:ex
funct3	rtl/core/id.v	/^    wire[2:0] funct3 = inst_i[14:12];$/;"	n	module:id
funct7	rtl/core/ex.v	/^    wire[6:0] funct7;$/;"	n	module:ex
funct7	rtl/core/id.v	/^    wire[6:0] funct7 = inst_i[31:25];$/;"	n	module:id
fw_file_size	rtl/debug/uart_debug.v	/^    reg[31:0] fw_file_size;$/;"	r	module:uart_debug
gen_en_dff	rtl/utils/gen_dff.v	/^module gen_en_dff #($/;"	m
gen_pipe_dff	rtl/utils/gen_dff.v	/^module gen_pipe_dff #($/;"	m
gen_rst_0_dff	rtl/utils/gen_dff.v	/^module gen_rst_0_dff #($/;"	m
gen_rst_1_dff	rtl/utils/gen_dff.v	/^module gen_rst_1_dff #($/;"	m
gen_rst_def_dff	rtl/utils/gen_dff.v	/^module gen_rst_def_dff #($/;"	m
gen_ticks_sync	rtl/utils/gen_buf.v	/^module gen_ticks_sync #($/;"	m
global_int_en_i	rtl/core/clint.v	/^    input wire global_int_en_i,              \/\/ 全局中断使能标志$/;"	p	module:clint
global_int_en_o	rtl/core/csr_reg.v	/^    output wire global_int_en_o,            \/\/ 全局中断使能标志$/;"	p	module:csr_reg
gpio	rtl/perips/gpio.v	/^module gpio($/;"	m
gpio	rtl/soc/tinyriscv_soc_top.v	/^    inout wire[15:0] gpio,    \/\/ GPIO引脚$/;"	p	module:tinyriscv_soc_top
gpio_0	rtl/soc/tinyriscv_soc_top.v	/^    gpio gpio_0($/;"	i	module:tinyriscv_soc_top	typeref:module:gpio
gpio_ctrl	rtl/perips/gpio.v	/^    reg[31:0] gpio_ctrl;$/;"	r	module:gpio
gpio_ctrl	rtl/soc/tinyriscv_soc_top.v	/^    wire[31:0] gpio_ctrl;$/;"	n	module:tinyriscv_soc_top
gpio_data	rtl/perips/gpio.v	/^    reg[31:0] gpio_data;$/;"	r	module:gpio
gpio_data	rtl/soc/tinyriscv_soc_top.v	/^    wire[31:0] gpio_data;$/;"	n	module:tinyriscv_soc_top
grant	rtl/core/rib.v	/^    reg[1:0] grant;$/;"	r	module:rib
grant0	rtl/core/rib.v	/^    parameter [1:0]grant0 = 2'h0;$/;"	c	module:rib
grant1	rtl/core/rib.v	/^    parameter [1:0]grant1 = 2'h1;$/;"	c	module:rib
grant2	rtl/core/rib.v	/^    parameter [1:0]grant2 = 2'h2;$/;"	c	module:rib
grant3	rtl/core/rib.v	/^    parameter [1:0]grant3 = 2'h3;$/;"	c	module:rib
halt_req_o	rtl/debug/jtag_top.v	/^    output wire halt_req_o,$/;"	p	module:jtag_top
halted_ind	rtl/soc/tinyriscv_soc_top.v	/^    output wire halted_ind,  \/\/ jtag是否已经halt住CPU信号$/;"	p	module:tinyriscv_soc_top
hartinfo	rtl/debug/jtag_dm.v	/^    reg[31:0] hartinfo;$/;"	r	module:jtag_dm
hold_en	rtl/core/id_ex.v	/^    wire hold_en = (hold_flag_i >= `Hold_Id);$/;"	n	module:id_ex
hold_en	rtl/core/if_id.v	/^    wire hold_en = (hold_flag_i >= `Hold_If);$/;"	n	module:if_id
hold_en	rtl/utils/gen_dff.v	/^    input wire hold_en,$/;"	p	module:gen_pipe_dff
hold_flag	rtl/core/ex.v	/^    reg hold_flag;$/;"	r	module:ex
hold_flag_clint_i	rtl/core/ctrl.v	/^    input wire hold_flag_clint_i,$/;"	p	module:ctrl
hold_flag_ex_i	rtl/core/ctrl.v	/^    input wire hold_flag_ex_i,$/;"	p	module:ctrl
hold_flag_i	rtl/core/clint.v	/^    input wire[`Hold_Flag_Bus] hold_flag_i,  \/\/ 流水线暂停标志$/;"	p	module:clint
hold_flag_i	rtl/core/id_ex.v	/^    input wire[`Hold_Flag_Bus] hold_flag_i, \/\/ 流水线暂停标志$/;"	p	module:id_ex
hold_flag_i	rtl/core/if_id.v	/^    input wire[`Hold_Flag_Bus] hold_flag_i, \/\/ 流水线暂停标志$/;"	p	module:if_id
hold_flag_i	rtl/core/pc_reg.v	/^    input wire[`Hold_Flag_Bus] hold_flag_i, \/\/ 流水线暂停标志$/;"	p	module:pc_reg
hold_flag_o	rtl/core/clint.v	/^    output wire hold_flag_o,                 \/\/ 流水线暂停标志$/;"	p	module:clint
hold_flag_o	rtl/core/ctrl.v	/^    output reg[`Hold_Flag_Bus] hold_flag_o,$/;"	p	module:ctrl
hold_flag_o	rtl/core/ex.v	/^    output wire hold_flag_o,                \/\/ 是否暂停标志$/;"	p	module:ex
hold_flag_o	rtl/core/rib.v	/^    output reg hold_flag_o                 \/\/ 暂停流水线标志$/;"	p	module:rib
hold_flag_rib_i	rtl/core/ctrl.v	/^    input wire hold_flag_rib_i,$/;"	p	module:ctrl
i	rtl/utils/gen_buf.v	/^    genvar i;$/;"	r	module:gen_ticks_sync
i2c_addr	rtl/perips/I2C.v	/^    reg [6:0]   i2c_addr;$/;"	r	module:I2C
i2c_addr_ack	rtl/perips/I2C.v	/^                i2c_addr_ack = 3'd3,$/;"	c	module:I2C
i2c_addr_compare	rtl/perips/I2C.v	/^                i2c_addr_compare = 3'd2,$/;"	c	module:I2C
i2c_byte_cnt	rtl/perips/I2C.v	/^    reg [2:0]   i2c_byte_cnt;$/;"	r	module:I2C
i2c_compl	rtl/perips/I2C.v	/^    output              i2c_compl,$/;"	p	module:I2C
i2c_data	rtl/perips/I2C.v	/^    reg [31:0]  i2c_data;$/;"	r	module:I2C
i2c_div	rtl/perips/I2C.v	/^    localparam  i2c_div = 8'd125; \/\/ 124$/;"	c	module:I2C
i2c_div_cnt	rtl/perips/I2C.v	/^    reg [7:0]   i2c_div_cnt;$/;"	r	module:I2C
i2c_freq	rtl/perips/I2C.v	/^    localparam  i2c_freq = 400000; \/\/ 400KHz$/;"	c	module:I2C
i2c_idle	rtl/perips/I2C.v	/^    localparam  i2c_idle = 3'd0,$/;"	c	module:I2C
i2c_operation	rtl/perips/I2C.v	/^    reg         i2c_operation;\/\/0:write, 1:read$/;"	r	module:I2C
i2c_read	rtl/perips/I2C.v	/^                i2c_read = 3'd6,$/;"	c	module:I2C
i2c_read_ack	rtl/perips/I2C.v	/^                i2c_read_ack = 3'd7,$/;"	c	module:I2C
i2c_read_data	rtl/perips/I2C.v	/^    reg [31:0]  i2c_read_data;$/;"	r	module:I2C
i2c_read_en	rtl/perips/I2C.v	/^    wire        i2c_read_en;$/;"	n	module:I2C
i2c_scl_o	rtl/perips/I2C.v	/^    output              i2c_scl_o,$/;"	p	module:I2C
i2c_sda_i	rtl/perips/I2C.v	/^    input               i2c_sda_i,$/;"	p	module:I2C
i2c_sda_in_temp	rtl/perips/I2C.v	/^    reg         i2c_sda_in_temp;$/;"	r	module:I2C
i2c_sda_o	rtl/perips/I2C.v	/^    output  reg         i2c_sda_o$/;"	p	module:I2C
i2c_sda_o_next	rtl/perips/I2C.v	/^    wire    [7:0]   i2c_sda_o_next;$/;"	n	module:I2C
i2c_start	rtl/perips/I2C.v	/^                i2c_start = 3'd1,$/;"	c	module:I2C
i2c_state	rtl/perips/I2C.v	/^    reg [3:0]   i2c_state;$/;"	r	module:I2C
i2c_state_next	rtl/perips/I2C.v	/^    reg [3:0]   i2c_state_next;$/;"	r	module:I2C
i2c_stop	rtl/perips/I2C.v	/^                i2c_stop = 3'd8;$/;"	c	module:I2C
i2c_transfer_cnt	rtl/perips/I2C.v	/^    reg [3:0]   i2c_transfer_cnt;$/;"	r	module:I2C
i2c_transfer_cnt_next	rtl/perips/I2C.v	/^    reg [3:0]   i2c_transfer_cnt_next;$/;"	r	module:I2C
i2c_write	rtl/perips/I2C.v	/^                i2c_write = 3'd4,$/;"	c	module:I2C
i2c_write_ack	rtl/perips/I2C.v	/^                i2c_write_ack = 3'd5,$/;"	c	module:I2C
id	rtl/core/id.v	/^module id($/;"	m
id_csr_raddr_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] id_csr_raddr_o;$/;"	n	module:tinyriscv
id_csr_rdata_o	rtl/core/tinyriscv.v	/^    wire[`RegBus] id_csr_rdata_o;$/;"	n	module:tinyriscv
id_csr_waddr_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] id_csr_waddr_o;$/;"	n	module:tinyriscv
id_csr_we_o	rtl/core/tinyriscv.v	/^    wire id_csr_we_o;$/;"	n	module:tinyriscv
id_ex	rtl/core/id_ex.v	/^module id_ex($/;"	m
id_inst_addr_o	rtl/core/tinyriscv.v	/^    wire[`InstAddrBus] id_inst_addr_o;$/;"	n	module:tinyriscv
id_inst_o	rtl/core/tinyriscv.v	/^    wire[`InstBus] id_inst_o;$/;"	n	module:tinyriscv
id_op1_jump_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] id_op1_jump_o;$/;"	n	module:tinyriscv
id_op1_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] id_op1_o;$/;"	n	module:tinyriscv
id_op2_jump_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] id_op2_jump_o;$/;"	n	module:tinyriscv
id_op2_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] id_op2_o;$/;"	n	module:tinyriscv
id_op3_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] id_op3_o;$/;"	n	module:tinyriscv
id_reg1_raddr_o	rtl/core/tinyriscv.v	/^    wire[`RegAddrBus] id_reg1_raddr_o;$/;"	n	module:tinyriscv
id_reg1_rdata_o	rtl/core/tinyriscv.v	/^    wire[`RegBus] id_reg1_rdata_o;$/;"	n	module:tinyriscv
id_reg2_raddr_o	rtl/core/tinyriscv.v	/^    wire[`RegAddrBus] id_reg2_raddr_o;$/;"	n	module:tinyriscv
id_reg2_rdata_o	rtl/core/tinyriscv.v	/^    wire[`RegBus] id_reg2_rdata_o;$/;"	n	module:tinyriscv
id_reg_waddr_o	rtl/core/tinyriscv.v	/^    wire[`RegAddrBus] id_reg_waddr_o;$/;"	n	module:tinyriscv
id_reg_we_o	rtl/core/tinyriscv.v	/^    wire id_reg_we_o;$/;"	n	module:tinyriscv
idcode	rtl/debug/jtag_driver.v	/^    wire[31:0] idcode;$/;"	n	module:jtag_driver
idle	rtl/utils/full_handshake_tx.v	/^    reg idle;$/;"	r	module:full_handshake_tx
idle_o	rtl/utils/full_handshake_tx.v	/^    output wire idle_o,             \/\/ TX端是否空闲信号，空闲才能发数据$/;"	p	module:full_handshake_tx
ie_csr_rdata_o	rtl/core/tinyriscv.v	/^    wire[`RegBus] ie_csr_rdata_o;$/;"	n	module:tinyriscv
ie_csr_waddr_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] ie_csr_waddr_o;$/;"	n	module:tinyriscv
ie_csr_we_o	rtl/core/tinyriscv.v	/^    wire ie_csr_we_o;$/;"	n	module:tinyriscv
ie_inst_addr_o	rtl/core/tinyriscv.v	/^    wire[`InstAddrBus] ie_inst_addr_o;$/;"	n	module:tinyriscv
ie_inst_o	rtl/core/tinyriscv.v	/^    wire[`InstBus] ie_inst_o;$/;"	n	module:tinyriscv
ie_op1_jump_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] ie_op1_jump_o;$/;"	n	module:tinyriscv
ie_op1_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] ie_op1_o;$/;"	n	module:tinyriscv
ie_op2_jump_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] ie_op2_jump_o;$/;"	n	module:tinyriscv
ie_op2_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] ie_op2_o;$/;"	n	module:tinyriscv
ie_op3_o	rtl/core/tinyriscv.v	/^    wire[`MemAddrBus] ie_op3_o;$/;"	n	module:tinyriscv
ie_reg1_rdata_o	rtl/core/tinyriscv.v	/^    wire[`RegBus] ie_reg1_rdata_o;$/;"	n	module:tinyriscv
ie_reg2_rdata_o	rtl/core/tinyriscv.v	/^    wire[`RegBus] ie_reg2_rdata_o;$/;"	n	module:tinyriscv
ie_reg_waddr_o	rtl/core/tinyriscv.v	/^    wire[`RegAddrBus] ie_reg_waddr_o;$/;"	n	module:tinyriscv
ie_reg_we_o	rtl/core/tinyriscv.v	/^    wire ie_reg_we_o;$/;"	n	module:tinyriscv
if_id	rtl/core/if_id.v	/^module if_id($/;"	m
if_inst_addr_o	rtl/core/tinyriscv.v	/^    wire[`InstAddrBus] if_inst_addr_o;$/;"	n	module:tinyriscv
if_inst_o	rtl/core/tinyriscv.v	/^	wire[`InstBus] if_inst_o;$/;"	n	module:tinyriscv
if_int_flag_o	rtl/core/tinyriscv.v	/^    wire[`INT_BUS] if_int_flag_o;$/;"	n	module:tinyriscv
inst	rtl/core/id_ex.v	/^    wire[`InstBus] inst;$/;"	n	module:id_ex
inst	rtl/core/if_id.v	/^    wire[`InstBus] inst;$/;"	n	module:if_id
inst_addr	rtl/core/clint.v	/^    reg[`InstAddrBus] inst_addr;$/;"	r	module:clint
inst_addr	rtl/core/id_ex.v	/^    wire[`InstAddrBus] inst_addr;$/;"	n	module:id_ex
inst_addr	rtl/core/if_id.v	/^    wire[`InstAddrBus] inst_addr;$/;"	n	module:if_id
inst_addr_ff	rtl/core/id_ex.v	/^    gen_pipe_dff #(32) inst_addr_ff(clk, rst, hold_en, `ZeroWord, inst_addr_i, inst_addr);$/;"	i	module:id_ex	typeref:module:gen_pipe_dff
inst_addr_ff	rtl/core/if_id.v	/^    gen_pipe_dff #(32) inst_addr_ff(clk, rst, hold_en, `ZeroWord, inst_addr_i, inst_addr);$/;"	i	module:if_id	typeref:module:gen_pipe_dff
inst_addr_i	rtl/core/clint.v	/^    input wire[`InstAddrBus] inst_addr_i,    \/\/ 指令地址$/;"	p	module:clint
inst_addr_i	rtl/core/ex.v	/^    input wire[`InstAddrBus] inst_addr_i,   \/\/ 指令地址$/;"	p	module:ex
inst_addr_i	rtl/core/id.v	/^    input wire[`InstAddrBus] inst_addr_i,    \/\/ 指令地址$/;"	p	module:id
inst_addr_i	rtl/core/id_ex.v	/^    input wire[`InstAddrBus] inst_addr_i,   \/\/ 指令地址$/;"	p	module:id_ex
inst_addr_i	rtl/core/if_id.v	/^    input wire[`InstAddrBus] inst_addr_i,   \/\/ 指令地址$/;"	p	module:if_id
inst_addr_o	rtl/core/id.v	/^    output reg[`InstAddrBus] inst_addr_o,    \/\/ 指令地址$/;"	p	module:id
inst_addr_o	rtl/core/id_ex.v	/^    output wire[`InstAddrBus] inst_addr_o,   \/\/ 指令地址$/;"	p	module:id_ex
inst_addr_o	rtl/core/if_id.v	/^    output wire[`InstAddrBus] inst_addr_o   \/\/ 指令地址$/;"	p	module:if_id
inst_ff	rtl/core/id_ex.v	/^    gen_pipe_dff #(32) inst_ff(clk, rst, hold_en, `INST_NOP, inst_i, inst);$/;"	i	module:id_ex	typeref:module:gen_pipe_dff
inst_ff	rtl/core/if_id.v	/^    gen_pipe_dff #(32) inst_ff(clk, rst, hold_en, `INST_NOP, inst_i, inst);$/;"	i	module:if_id	typeref:module:gen_pipe_dff
inst_i	rtl/core/clint.v	/^    input wire[`InstBus] inst_i,             \/\/ 指令内容$/;"	p	module:clint
inst_i	rtl/core/ex.v	/^    input wire[`InstBus] inst_i,            \/\/ 指令内容$/;"	p	module:ex
inst_i	rtl/core/id.v	/^    input wire[`InstBus] inst_i,             \/\/ 指令内容$/;"	p	module:id
inst_i	rtl/core/id_ex.v	/^    input wire[`InstBus] inst_i,            \/\/ 指令内容$/;"	p	module:id_ex
inst_i	rtl/core/if_id.v	/^    input wire[`InstBus] inst_i,            \/\/ 指令内容$/;"	p	module:if_id
inst_o	rtl/core/id.v	/^    output reg[`InstBus] inst_o,             \/\/ 指令内容$/;"	p	module:id
inst_o	rtl/core/id_ex.v	/^    output wire[`InstBus] inst_o,            \/\/ 指令内容$/;"	p	module:id_ex
inst_o	rtl/core/if_id.v	/^    output wire[`InstBus] inst_o,           \/\/ 指令内容$/;"	p	module:if_id
int_addr_i	rtl/core/ex.v	/^    input wire[`InstAddrBus] int_addr_i,    \/\/ 中断跳转地址$/;"	p	module:ex
int_addr_o	rtl/core/clint.v	/^    output reg[`InstAddrBus] int_addr_o,     \/\/ 中断入口地址$/;"	p	module:clint
int_assert_i	rtl/core/ex.v	/^    input wire int_assert_i,                \/\/ 中断发生标志$/;"	p	module:ex
int_assert_o	rtl/core/clint.v	/^    output reg int_assert_o                  \/\/ 中断标志$/;"	p	module:clint
int_ff	rtl/core/if_id.v	/^    gen_pipe_dff #(8) int_ff(clk, rst, hold_en, `INT_NONE, int_flag_i, int_flag);$/;"	i	module:if_id	typeref:module:gen_pipe_dff
int_flag	rtl/core/if_id.v	/^    wire[`INT_BUS] int_flag;$/;"	n	module:if_id
int_flag	rtl/soc/tinyriscv_soc_top.v	/^    wire[`INT_BUS] int_flag;$/;"	n	module:tinyriscv_soc_top
int_flag_i	rtl/core/clint.v	/^    input wire[`INT_BUS] int_flag_i,         \/\/ 中断输入信号$/;"	p	module:clint
int_flag_i	rtl/core/if_id.v	/^    input wire[`INT_BUS] int_flag_i,        \/\/ 外设中断输入信号$/;"	p	module:if_id
int_flag_o	rtl/core/if_id.v	/^    output wire[`INT_BUS] int_flag_o,$/;"	p	module:if_id
int_i	rtl/core/tinyriscv.v	/^    input wire[`INT_BUS] int_i                 \/\/ 中断信号$/;"	p	module:tinyriscv
int_sig_o	rtl/perips/timer.v	/^    output wire int_sig_o$/;"	p	module:timer
int_state	rtl/core/clint.v	/^    reg[3:0] int_state;$/;"	r	module:clint
invert_result	rtl/core/div.v	/^    reg invert_result;$/;"	r	module:div
io_in	rtl/soc/tinyriscv_soc_top.v	/^    wire[15:0] io_in;$/;"	n	module:tinyriscv_soc_top
io_pin_i	rtl/perips/gpio.v	/^    input wire[15:0] io_pin_i,$/;"	p	module:gpio
ir_reg	rtl/debug/jtag_driver.v	/^    reg[IR_BITS - 1:0] ir_reg;$/;"	r	module:jtag_driver
is_busy	rtl/debug/jtag_driver.v	/^    wire is_busy;$/;"	n	module:jtag_driver
is_read_reg	rtl/debug/jtag_dm.v	/^    reg is_read_reg;$/;"	r	module:jtag_dm
jtag_TCK	rtl/debug/jtag_driver.v	/^    input wire jtag_TCK;$/;"	p	module:jtag_driver
jtag_TCK	rtl/soc/tinyriscv_soc_top.v	/^    input wire jtag_TCK,     \/\/ JTAG TCK引脚$/;"	p	module:tinyriscv_soc_top
jtag_TDI	rtl/debug/jtag_driver.v	/^    input wire jtag_TDI;$/;"	p	module:jtag_driver
jtag_TDI	rtl/soc/tinyriscv_soc_top.v	/^    input wire jtag_TDI,     \/\/ JTAG TDI引脚$/;"	p	module:tinyriscv_soc_top
jtag_TDO	rtl/debug/jtag_driver.v	/^    output reg jtag_TDO;$/;"	p	module:jtag_driver
jtag_TDO	rtl/soc/tinyriscv_soc_top.v	/^    output wire jtag_TDO,    \/\/ JTAG TDO引脚$/;"	p	module:tinyriscv_soc_top
jtag_TMS	rtl/debug/jtag_driver.v	/^    input wire jtag_TMS;$/;"	p	module:jtag_driver
jtag_TMS	rtl/soc/tinyriscv_soc_top.v	/^    input wire jtag_TMS,     \/\/ JTAG TMS引脚$/;"	p	module:tinyriscv_soc_top
jtag_addr_i	rtl/core/regs.v	/^    input wire[`RegAddrBus] jtag_addr_i,  \/\/ 读、写寄存器地址$/;"	p	module:regs
jtag_data_i	rtl/core/regs.v	/^    input wire[`RegBus] jtag_data_i,      \/\/ 写寄存器数据$/;"	p	module:regs
jtag_data_o	rtl/core/regs.v	/^    output reg[`RegBus] jtag_data_o       \/\/ 读寄存器数据$/;"	p	module:regs
jtag_dm	rtl/debug/jtag_dm.v	/^module jtag_dm #($/;"	m
jtag_driver	rtl/debug/jtag_driver.v	/^module jtag_driver #($/;"	m
jtag_halt_flag_i	rtl/core/ctrl.v	/^    input wire jtag_halt_flag_i,$/;"	p	module:ctrl
jtag_halt_flag_i	rtl/core/tinyriscv.v	/^    input wire jtag_halt_flag_i,               \/\/ jtag暂停标志$/;"	p	module:tinyriscv
jtag_halt_req_o	rtl/soc/tinyriscv_soc_top.v	/^    wire jtag_halt_req_o;$/;"	n	module:tinyriscv_soc_top
jtag_pin_TCK	rtl/debug/jtag_top.v	/^    input wire jtag_pin_TCK,$/;"	p	module:jtag_top
jtag_pin_TDI	rtl/debug/jtag_top.v	/^    input wire jtag_pin_TDI,$/;"	p	module:jtag_top
jtag_pin_TDO	rtl/debug/jtag_top.v	/^    output wire jtag_pin_TDO,$/;"	p	module:jtag_top
jtag_pin_TMS	rtl/debug/jtag_top.v	/^    input wire jtag_pin_TMS,$/;"	p	module:jtag_top
jtag_reg_addr_i	rtl/core/tinyriscv.v	/^    input wire[`RegAddrBus] jtag_reg_addr_i,   \/\/ jtag模块读、写寄存器的地址$/;"	p	module:tinyriscv
jtag_reg_addr_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`RegAddrBus] jtag_reg_addr_o;$/;"	n	module:tinyriscv_soc_top
jtag_reg_data_i	rtl/core/tinyriscv.v	/^    input wire[`RegBus] jtag_reg_data_i,       \/\/ jtag模块写寄存器数据$/;"	p	module:tinyriscv
jtag_reg_data_i	rtl/soc/tinyriscv_soc_top.v	/^    wire[`RegBus] jtag_reg_data_i;$/;"	n	module:tinyriscv_soc_top
jtag_reg_data_o	rtl/core/tinyriscv.v	/^    output wire[`RegBus] jtag_reg_data_o,      \/\/ jtag模块读取到的寄存器数据$/;"	p	module:tinyriscv
jtag_reg_data_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`RegBus] jtag_reg_data_o;$/;"	n	module:tinyriscv_soc_top
jtag_reg_we_i	rtl/core/tinyriscv.v	/^    input wire jtag_reg_we_i,                  \/\/ jtag模块写寄存器标志$/;"	p	module:tinyriscv
jtag_reg_we_o	rtl/soc/tinyriscv_soc_top.v	/^    wire jtag_reg_we_o;$/;"	n	module:tinyriscv_soc_top
jtag_reset_flag_i	rtl/core/pc_reg.v	/^    input wire jtag_reset_flag_i,           \/\/ 复位标志$/;"	p	module:pc_reg
jtag_reset_flag_i	rtl/core/tinyriscv.v	/^    input wire jtag_reset_flag_i,              \/\/ jtag复位PC标志$/;"	p	module:tinyriscv
jtag_reset_req_o	rtl/soc/tinyriscv_soc_top.v	/^    wire jtag_reset_req_o;$/;"	n	module:tinyriscv_soc_top
jtag_rst_n	rtl/debug/jtag_top.v	/^    input wire jtag_rst_n,$/;"	p	module:jtag_top
jtag_state	rtl/debug/jtag_driver.v	/^    reg[3:0] jtag_state;$/;"	r	module:jtag_driver
jtag_top	rtl/debug/jtag_top.v	/^module jtag_top #($/;"	m
jtag_we_i	rtl/core/regs.v	/^    input wire jtag_we_i,                 \/\/ 写寄存器标志$/;"	p	module:regs
jump_addr	rtl/core/ex.v	/^    reg[`InstAddrBus] jump_addr;$/;"	r	module:ex
jump_addr_i	rtl/core/clint.v	/^    input wire[`InstAddrBus] jump_addr_i,$/;"	p	module:clint
jump_addr_i	rtl/core/ctrl.v	/^    input wire[`InstAddrBus] jump_addr_i,$/;"	p	module:ctrl
jump_addr_i	rtl/core/pc_reg.v	/^    input wire[`InstAddrBus] jump_addr_i,   \/\/ 跳转地址$/;"	p	module:pc_reg
jump_addr_o	rtl/core/ctrl.v	/^    output reg[`InstAddrBus] jump_addr_o$/;"	p	module:ctrl
jump_addr_o	rtl/core/ex.v	/^    output wire[`InstAddrBus] jump_addr_o   \/\/ 跳转目的地址$/;"	p	module:ex
jump_flag	rtl/core/ex.v	/^    reg jump_flag;$/;"	r	module:ex
jump_flag_i	rtl/core/clint.v	/^    input wire jump_flag_i,$/;"	p	module:clint
jump_flag_i	rtl/core/ctrl.v	/^    input wire jump_flag_i,$/;"	p	module:ctrl
jump_flag_i	rtl/core/pc_reg.v	/^    input wire jump_flag_i,                 \/\/ 跳转标志$/;"	p	module:pc_reg
jump_flag_o	rtl/core/ctrl.v	/^    output reg jump_flag_o,$/;"	p	module:ctrl
jump_flag_o	rtl/core/ex.v	/^    output wire jump_flag_o,                \/\/ 是否跳转标志$/;"	p	module:ex
m0_addr_i	rtl/core/rib.v	/^    input wire[`MemAddrBus] m0_addr_i,     \/\/ 主设备0读、写地址$/;"	p	module:rib
m0_addr_i	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemAddrBus] m0_addr_i;$/;"	n	module:tinyriscv_soc_top
m0_data_i	rtl/core/rib.v	/^    input wire[`MemBus] m0_data_i,         \/\/ 主设备0写数据$/;"	p	module:rib
m0_data_i	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] m0_data_i;$/;"	n	module:tinyriscv_soc_top
m0_data_o	rtl/core/rib.v	/^    output reg[`MemBus] m0_data_o,         \/\/ 主设备0读取到的数据$/;"	p	module:rib
m0_data_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] m0_data_o;$/;"	n	module:tinyriscv_soc_top
m0_req_i	rtl/core/rib.v	/^    input wire m0_req_i,                   \/\/ 主设备0访问请求标志$/;"	p	module:rib
m0_req_i	rtl/soc/tinyriscv_soc_top.v	/^    wire m0_req_i;$/;"	n	module:tinyriscv_soc_top
m0_we_i	rtl/core/rib.v	/^    input wire m0_we_i,                    \/\/ 主设备0写标志$/;"	p	module:rib
m0_we_i	rtl/soc/tinyriscv_soc_top.v	/^    wire m0_we_i;$/;"	n	module:tinyriscv_soc_top
m1_addr_i	rtl/core/rib.v	/^    input wire[`MemAddrBus] m1_addr_i,     \/\/ 主设备1读、写地址$/;"	p	module:rib
m1_addr_i	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemAddrBus] m1_addr_i;$/;"	n	module:tinyriscv_soc_top
m1_data_i	rtl/core/rib.v	/^    input wire[`MemBus] m1_data_i,         \/\/ 主设备1写数据$/;"	p	module:rib
m1_data_i	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] m1_data_i;$/;"	n	module:tinyriscv_soc_top
m1_data_o	rtl/core/rib.v	/^    output reg[`MemBus] m1_data_o,         \/\/ 主设备1读取到的数据$/;"	p	module:rib
m1_data_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] m1_data_o;$/;"	n	module:tinyriscv_soc_top
m1_req_i	rtl/core/rib.v	/^    input wire m1_req_i,                   \/\/ 主设备1访问请求标志$/;"	p	module:rib
m1_req_i	rtl/soc/tinyriscv_soc_top.v	/^    wire m1_req_i;$/;"	n	module:tinyriscv_soc_top
m1_we_i	rtl/core/rib.v	/^    input wire m1_we_i,                    \/\/ 主设备1写标志$/;"	p	module:rib
m1_we_i	rtl/soc/tinyriscv_soc_top.v	/^    wire m1_we_i;$/;"	n	module:tinyriscv_soc_top
m2_addr_i	rtl/core/rib.v	/^    input wire[`MemAddrBus] m2_addr_i,     \/\/ 主设备2读、写地址$/;"	p	module:rib
m2_addr_i	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemAddrBus] m2_addr_i;$/;"	n	module:tinyriscv_soc_top
m2_data_i	rtl/core/rib.v	/^    input wire[`MemBus] m2_data_i,         \/\/ 主设备2写数据$/;"	p	module:rib
m2_data_i	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] m2_data_i;$/;"	n	module:tinyriscv_soc_top
m2_data_o	rtl/core/rib.v	/^    output reg[`MemBus] m2_data_o,         \/\/ 主设备2读取到的数据$/;"	p	module:rib
m2_data_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] m2_data_o;$/;"	n	module:tinyriscv_soc_top
m2_req_i	rtl/core/rib.v	/^    input wire m2_req_i,                   \/\/ 主设备2访问请求标志$/;"	p	module:rib
m2_req_i	rtl/soc/tinyriscv_soc_top.v	/^    wire m2_req_i;$/;"	n	module:tinyriscv_soc_top
m2_we_i	rtl/core/rib.v	/^    input wire m2_we_i,                    \/\/ 主设备2写标志$/;"	p	module:rib
m2_we_i	rtl/soc/tinyriscv_soc_top.v	/^    wire m2_we_i;$/;"	n	module:tinyriscv_soc_top
m3_addr_i	rtl/core/rib.v	/^    input wire[`MemAddrBus] m3_addr_i,     \/\/ 主设备3读、写地址$/;"	p	module:rib
m3_addr_i	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemAddrBus] m3_addr_i;$/;"	n	module:tinyriscv_soc_top
m3_data_i	rtl/core/rib.v	/^    input wire[`MemBus] m3_data_i,         \/\/ 主设备3写数据$/;"	p	module:rib
m3_data_i	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] m3_data_i;$/;"	n	module:tinyriscv_soc_top
m3_data_o	rtl/core/rib.v	/^    output reg[`MemBus] m3_data_o,         \/\/ 主设备3读取到的数据$/;"	p	module:rib
m3_data_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] m3_data_o;$/;"	n	module:tinyriscv_soc_top
m3_req_i	rtl/core/rib.v	/^    input wire m3_req_i,                   \/\/ 主设备3访问请求标志$/;"	p	module:rib
m3_req_i	rtl/soc/tinyriscv_soc_top.v	/^    wire m3_req_i;$/;"	n	module:tinyriscv_soc_top
m3_we_i	rtl/core/rib.v	/^    input wire m3_we_i,                    \/\/ 主设备3写标志$/;"	p	module:rib
m3_we_i	rtl/soc/tinyriscv_soc_top.v	/^    wire m3_we_i;$/;"	n	module:tinyriscv_soc_top
mcause	rtl/core/csr_reg.v	/^    reg[`RegBus] mcause;$/;"	r	module:csr_reg
mem_addr_o	rtl/debug/jtag_top.v	/^    output wire[31:0] mem_addr_o,$/;"	p	module:jtag_top
mem_addr_o	rtl/debug/uart_debug.v	/^    output reg[31:0] mem_addr_o,$/;"	p	module:uart_debug
mem_raddr_index	rtl/core/ex.v	/^    wire[1:0] mem_raddr_index;$/;"	n	module:ex
mem_raddr_o	rtl/core/ex.v	/^    output reg[`MemAddrBus] mem_raddr_o,    \/\/ 读内存地址$/;"	p	module:ex
mem_rdata_i	rtl/core/ex.v	/^    input wire[`MemBus] mem_rdata_i,        \/\/ 内存输入数据$/;"	p	module:ex
mem_rdata_i	rtl/debug/jtag_top.v	/^    input wire[31:0] mem_rdata_i,$/;"	p	module:jtag_top
mem_rdata_i	rtl/debug/uart_debug.v	/^    input wire[31:0] mem_rdata_i$/;"	p	module:uart_debug
mem_req	rtl/core/ex.v	/^    reg mem_req;$/;"	r	module:ex
mem_req_o	rtl/core/ex.v	/^    output wire mem_req_o,                  \/\/ 请求访问内存标志$/;"	p	module:ex
mem_waddr_index	rtl/core/ex.v	/^    wire[1:0] mem_waddr_index;$/;"	n	module:ex
mem_waddr_o	rtl/core/ex.v	/^    output reg[`MemAddrBus] mem_waddr_o,    \/\/ 写内存地址$/;"	p	module:ex
mem_wdata_o	rtl/core/ex.v	/^    output reg[`MemBus] mem_wdata_o,        \/\/ 写内存数据$/;"	p	module:ex
mem_wdata_o	rtl/debug/jtag_top.v	/^    output wire[31:0] mem_wdata_o,$/;"	p	module:jtag_top
mem_wdata_o	rtl/debug/uart_debug.v	/^    output reg[31:0] mem_wdata_o,$/;"	p	module:uart_debug
mem_we	rtl/core/ex.v	/^    reg mem_we;$/;"	r	module:ex
mem_we_o	rtl/core/ex.v	/^    output wire mem_we_o,                   \/\/ 是否要写内存$/;"	p	module:ex
mem_we_o	rtl/debug/jtag_top.v	/^    output wire mem_we_o,$/;"	p	module:jtag_top
mem_we_o	rtl/debug/uart_debug.v	/^    output reg mem_we_o,$/;"	p	module:uart_debug
mepc	rtl/core/csr_reg.v	/^    reg[`RegBus] mepc;$/;"	r	module:csr_reg
mie	rtl/core/csr_reg.v	/^    reg[`RegBus] mie;$/;"	r	module:csr_reg
minuend	rtl/core/div.v	/^    reg[`RegBus] minuend;$/;"	r	module:div
minuend_ge_divisor	rtl/core/div.v	/^    wire minuend_ge_divisor = minuend >= divisor_r;$/;"	n	module:div
minuend_sub_res	rtl/core/div.v	/^    wire[31:0] minuend_sub_res = minuend - divisor_r;$/;"	n	module:div
minuend_tmp	rtl/core/div.v	/^    wire[31:0] minuend_tmp = minuend_ge_divisor? minuend_sub_res[30:0]: minuend[30:0];$/;"	n	module:div
mscratch	rtl/core/csr_reg.v	/^    reg[`RegBus] mscratch;$/;"	r	module:csr_reg
mstatus	rtl/core/csr_reg.v	/^    reg[`RegBus] mstatus;$/;"	r	module:csr_reg
mtvec	rtl/core/csr_reg.v	/^    reg[`RegBus] mtvec;$/;"	r	module:csr_reg
mul_op1	rtl/core/ex.v	/^    reg[`RegBus] mul_op1;$/;"	r	module:ex
mul_op2	rtl/core/ex.v	/^    reg[`RegBus] mul_op2;$/;"	r	module:ex
mul_temp	rtl/core/ex.v	/^    wire[`DoubleRegBus] mul_temp;$/;"	n	module:ex
mul_temp_invert	rtl/core/ex.v	/^    wire[`DoubleRegBus] mul_temp_invert;$/;"	n	module:ex
need_resp	rtl/debug/jtag_dm.v	/^    reg need_resp;$/;"	r	module:jtag_dm
need_to_rec_bytes	rtl/debug/uart_debug.v	/^    reg[7:0] need_to_rec_bytes;$/;"	r	module:uart_debug
none_busy_response	rtl/debug/jtag_driver.v	/^    wire [SHIFT_REG_BITS - 1:0] none_busy_response;$/;"	n	module:jtag_driver
op	rtl/debug/jtag_dm.v	/^    wire[DMI_OP_BITS-1:0] op = rx_data[DMI_OP_BITS-1:0];$/;"	n	module:jtag_dm
op1	rtl/core/id_ex.v	/^    wire[`MemAddrBus] op1;$/;"	n	module:id_ex
op1_add_op2_res	rtl/core/ex.v	/^    wire[31:0] op1_add_op2_res;$/;"	n	module:ex
op1_add_op3_res	rtl/core/ex.v	/^    wire[31:0] op1_add_op3_res;$/;"	n	module:ex
op1_eq_op2	rtl/core/ex.v	/^    wire op1_eq_op2;$/;"	n	module:ex
op1_ff	rtl/core/id_ex.v	/^    gen_pipe_dff #(32) op1_ff(clk, rst, hold_en, `ZeroWord, op1_i, op1);$/;"	i	module:id_ex	typeref:module:gen_pipe_dff
op1_ge_op2_signed	rtl/core/ex.v	/^    wire op1_ge_op2_signed;$/;"	n	module:ex
op1_ge_op2_unsigned	rtl/core/ex.v	/^    wire op1_ge_op2_unsigned;$/;"	n	module:ex
op1_i	rtl/core/ex.v	/^    input wire[`MemAddrBus] op1_i,$/;"	p	module:ex
op1_i	rtl/core/id_ex.v	/^    input wire[`MemAddrBus] op1_i,$/;"	p	module:id_ex
op1_jump	rtl/core/id_ex.v	/^    wire[`MemAddrBus] op1_jump;$/;"	n	module:id_ex
op1_jump_add_op2_jump_res	rtl/core/ex.v	/^    wire[31:0] op1_jump_add_op2_jump_res;$/;"	n	module:ex
op1_jump_ff	rtl/core/id_ex.v	/^    gen_pipe_dff #(32) op1_jump_ff(clk, rst, hold_en, `ZeroWord, op1_jump_i, op1_jump);$/;"	i	module:id_ex	typeref:module:gen_pipe_dff
op1_jump_i	rtl/core/ex.v	/^    input wire[`MemAddrBus] op1_jump_i,$/;"	p	module:ex
op1_jump_i	rtl/core/id_ex.v	/^    input wire[`MemAddrBus] op1_jump_i,$/;"	p	module:id_ex
op1_jump_o	rtl/core/id.v	/^    output reg[`MemAddrBus] op1_jump_o,$/;"	p	module:id
op1_jump_o	rtl/core/id_ex.v	/^    output wire[`MemAddrBus] op1_jump_o,$/;"	p	module:id_ex
op1_o	rtl/core/id.v	/^    output reg[`MemAddrBus] op1_o,$/;"	p	module:id
op1_o	rtl/core/id_ex.v	/^    output wire[`MemAddrBus] op1_o,$/;"	p	module:id_ex
op2	rtl/core/id_ex.v	/^    wire[`MemAddrBus] op2;$/;"	n	module:id_ex
op2_ff	rtl/core/id_ex.v	/^    gen_pipe_dff #(32) op2_ff(clk, rst, hold_en, `ZeroWord, op2_i, op2);$/;"	i	module:id_ex	typeref:module:gen_pipe_dff
op2_i	rtl/core/ex.v	/^    input wire[`MemAddrBus] op2_i,$/;"	p	module:ex
op2_i	rtl/core/id_ex.v	/^    input wire[`MemAddrBus] op2_i,$/;"	p	module:id_ex
op2_jump	rtl/core/id_ex.v	/^    wire[`MemAddrBus] op2_jump;$/;"	n	module:id_ex
op2_jump_ff	rtl/core/id_ex.v	/^    gen_pipe_dff #(32) op2_jump_ff(clk, rst, hold_en, `ZeroWord, op2_jump_i, op2_jump);$/;"	i	module:id_ex	typeref:module:gen_pipe_dff
op2_jump_i	rtl/core/ex.v	/^    input wire[`MemAddrBus] op2_jump_i,$/;"	p	module:ex
op2_jump_i	rtl/core/id_ex.v	/^    input wire[`MemAddrBus] op2_jump_i,$/;"	p	module:id_ex
op2_jump_o	rtl/core/id.v	/^    output reg[`MemAddrBus] op2_jump_o,$/;"	p	module:id
op2_jump_o	rtl/core/id_ex.v	/^    output wire[`MemAddrBus] op2_jump_o,$/;"	p	module:id_ex
op2_o	rtl/core/id.v	/^    output reg[`MemAddrBus] op2_o,$/;"	p	module:id
op2_o	rtl/core/id_ex.v	/^    output wire[`MemAddrBus] op2_o,$/;"	p	module:id_ex
op3	rtl/core/id_ex.v	/^    wire[`MemAddrBus] op3;$/;"	n	module:id_ex
op3_ff	rtl/core/id_ex.v	/^    gen_pipe_dff #(32) op3_ff(clk, rst, hold_en, `ZeroWord, op3_i, op3);$/;"	i	module:id_ex	typeref:module:gen_pipe_dff
op3_i	rtl/core/ex.v	/^    input wire[`MemAddrBus] op3_i,$/;"	p	module:ex
op3_i	rtl/core/id_ex.v	/^    input wire[`MemAddrBus] op3_i,$/;"	p	module:id_ex
op3_o	rtl/core/id.v	/^    output reg[`MemAddrBus] op3_o,     $/;"	p	module:id
op3_o	rtl/core/id_ex.v	/^    output wire[`MemAddrBus] op3_o,$/;"	p	module:id_ex
op_div	rtl/core/div.v	/^    wire op_div = (op_r == `INST_DIV);$/;"	n	module:div
op_divu	rtl/core/div.v	/^    wire op_divu = (op_r == `INST_DIVU);$/;"	n	module:div
op_i	rtl/core/div.v	/^    input wire[2:0] op_i,                \/\/ 具体是哪一条指令$/;"	p	module:div
op_r	rtl/core/div.v	/^    reg[2:0] op_r;$/;"	r	module:div
op_rem	rtl/core/div.v	/^    wire op_rem = (op_r == `INST_REM);$/;"	n	module:div
op_remu	rtl/core/div.v	/^    wire op_remu = (op_r == `INST_REMU);$/;"	n	module:div
op_req_o	rtl/debug/jtag_top.v	/^    output wire op_req_o,$/;"	p	module:jtag_top
opcode	rtl/core/ex.v	/^    wire[6:0] opcode;$/;"	n	module:ex
opcode	rtl/core/id.v	/^    wire[6:0] opcode = inst_i[6:0];$/;"	n	module:id
over	rtl/soc/tinyriscv_soc_top.v	/^    output reg over,         \/\/ 测试是否完成信号$/;"	p	module:tinyriscv_soc_top
pc_o	rtl/core/pc_reg.v	/^    output reg[`InstAddrBus] pc_o           \/\/ PC指针$/;"	p	module:pc_reg
pc_pc_o	rtl/core/tinyriscv.v	/^	wire[`InstAddrBus] pc_pc_o;$/;"	n	module:tinyriscv
pc_reg	rtl/core/pc_reg.v	/^module pc_reg($/;"	m
pwm_0	rtl/soc/tinyriscv_soc_top.v	/^    pwm pwm_0($/;"	i	module:tinyriscv_soc_top	typeref:module:pwm
pwm_out	rtl/perips/PWM.v	/^    output  [3:0]       pwm_out$/;"	p	module:PWM
pwm_out	rtl/soc/tinyriscv_soc_top.v	/^    output wire [3:0]   pwm_out     \/\/ PWM输出引脚$/;"	p	module:tinyriscv_soc_top
qout	rtl/utils/gen_dff.v	/^    output wire[DW-1:0] qout$/;"	p	module:gen_en_dff
qout	rtl/utils/gen_dff.v	/^    output wire[DW-1:0] qout$/;"	p	module:gen_pipe_dff
qout	rtl/utils/gen_dff.v	/^    output wire[DW-1:0] qout$/;"	p	module:gen_rst_0_dff
qout	rtl/utils/gen_dff.v	/^    output wire[DW-1:0] qout$/;"	p	module:gen_rst_1_dff
qout	rtl/utils/gen_dff.v	/^    output wire[DW-1:0] qout$/;"	p	module:gen_rst_def_dff
qout_r	rtl/utils/gen_dff.v	/^    reg[DW-1:0] qout_r;$/;"	r	module:gen_en_dff
qout_r	rtl/utils/gen_dff.v	/^    reg[DW-1:0] qout_r;$/;"	r	module:gen_pipe_dff
qout_r	rtl/utils/gen_dff.v	/^    reg[DW-1:0] qout_r;$/;"	r	module:gen_rst_0_dff
qout_r	rtl/utils/gen_dff.v	/^    reg[DW-1:0] qout_r;$/;"	r	module:gen_rst_1_dff
qout_r	rtl/utils/gen_dff.v	/^    reg[DW-1:0] qout_r;$/;"	r	module:gen_rst_def_dff
raddr1_i	rtl/core/regs.v	/^    input wire[`RegAddrBus] raddr1_i,     \/\/ 读寄存器1地址$/;"	p	module:regs
raddr2_i	rtl/core/regs.v	/^    input wire[`RegAddrBus] raddr2_i,     \/\/ 读寄存器2地址$/;"	p	module:regs
raddr_i	rtl/core/csr_reg.v	/^    input wire[`MemAddrBus] raddr_i,        \/\/ ex模块读寄存器地址$/;"	p	module:csr_reg
raddr_o	rtl/core/clint.v	/^    output reg[`MemAddrBus] raddr_o,         \/\/ 读CSR寄存器地址$/;"	p	module:clint
ram	rtl/perips/ram.v	/^module ram($/;"	m
rd	rtl/core/ex.v	/^    wire[4:0] rd;$/;"	n	module:ex
rd	rtl/core/id.v	/^    wire[4:0] rd = inst_i[11:7];$/;"	n	module:id
rdata	rtl/perips/spi.v	/^    reg[7:0] rdata;                 \/\/ 从spi设备读回来的数据$/;"	r	module:spi
rdata1_o	rtl/core/regs.v	/^    output reg[`RegBus] rdata1_o,         \/\/ 读寄存器1数据$/;"	p	module:regs
rdata2_o	rtl/core/regs.v	/^    output reg[`RegBus] rdata2_o,         \/\/ 读寄存器2数据$/;"	p	module:regs
read_data	rtl/debug/jtag_dm.v	/^    reg[31:0] read_data;$/;"	r	module:jtag_dm
read_data	rtl/perips/I2C.v	/^    output  [31:0]      read_data,$/;"	p	module:I2C
read_dmstatus	rtl/debug/jtag_dm.v	/^    wire read_dmstatus = (op == `DTM_OP_READ) & (address == DMSTATUS);$/;"	n	module:jtag_dm
ready_o	rtl/core/div.v	/^    output reg ready_o,                  \/\/ 运算结束信号$/;"	p	module:div
rec_bytes_index	rtl/debug/uart_debug.v	/^    reg[7:0] rec_bytes_index;$/;"	r	module:uart_debug
recv_data	rtl/utils/full_handshake_rx.v	/^    reg[DW-1:0] recv_data;$/;"	r	module:full_handshake_rx
recv_data_o	rtl/utils/full_handshake_rx.v	/^    output wire[DW-1:0] recv_data_o,\/\/ RX端接收到的数据$/;"	p	module:full_handshake_rx
recv_rdy	rtl/utils/full_handshake_rx.v	/^    reg recv_rdy;$/;"	r	module:full_handshake_rx
recv_rdy_o	rtl/utils/full_handshake_rx.v	/^    output wire recv_rdy_o          \/\/ RX端是否接收到数据信号$/;"	p	module:full_handshake_rx
reg1_data_invert	rtl/core/ex.v	/^    wire[31:0] reg1_data_invert;$/;"	n	module:ex
reg1_raddr_o	rtl/core/id.v	/^    output reg[`RegAddrBus] reg1_raddr_o,    \/\/ 读通用寄存器1地址$/;"	p	module:id
reg1_rdata	rtl/core/id_ex.v	/^    wire[`RegBus] reg1_rdata;$/;"	n	module:id_ex
reg1_rdata_ff	rtl/core/id_ex.v	/^    gen_pipe_dff #(32) reg1_rdata_ff(clk, rst, hold_en, `ZeroWord, reg1_rdata_i, reg1_rdata);$/;"	i	module:id_ex	typeref:module:gen_pipe_dff
reg1_rdata_i	rtl/core/ex.v	/^    input wire[`RegBus] reg1_rdata_i,       \/\/ 通用寄存器1输入数据$/;"	p	module:ex
reg1_rdata_i	rtl/core/id.v	/^    input wire[`RegBus] reg1_rdata_i,        \/\/ 通用寄存器1输入数据$/;"	p	module:id
reg1_rdata_i	rtl/core/id_ex.v	/^    input wire[`RegBus] reg1_rdata_i,       \/\/ 通用寄存器1读数据$/;"	p	module:id_ex
reg1_rdata_o	rtl/core/id.v	/^    output reg[`RegBus] reg1_rdata_o,        \/\/ 通用寄存器1数据$/;"	p	module:id
reg1_rdata_o	rtl/core/id_ex.v	/^    output wire[`RegBus] reg1_rdata_o,       \/\/ 通用寄存器1读数据$/;"	p	module:id_ex
reg2_data_invert	rtl/core/ex.v	/^    wire[31:0] reg2_data_invert;$/;"	n	module:ex
reg2_raddr_o	rtl/core/id.v	/^    output reg[`RegAddrBus] reg2_raddr_o,    \/\/ 读通用寄存器2地址$/;"	p	module:id
reg2_rdata	rtl/core/id_ex.v	/^    wire[`RegBus] reg2_rdata;$/;"	n	module:id_ex
reg2_rdata_ff	rtl/core/id_ex.v	/^    gen_pipe_dff #(32) reg2_rdata_ff(clk, rst, hold_en, `ZeroWord, reg2_rdata_i, reg2_rdata);$/;"	i	module:id_ex	typeref:module:gen_pipe_dff
reg2_rdata_i	rtl/core/ex.v	/^    input wire[`RegBus] reg2_rdata_i,       \/\/ 通用寄存器2输入数据$/;"	p	module:ex
reg2_rdata_i	rtl/core/id.v	/^    input wire[`RegBus] reg2_rdata_i,        \/\/ 通用寄存器2输入数据$/;"	p	module:id
reg2_rdata_i	rtl/core/id_ex.v	/^    input wire[`RegBus] reg2_rdata_i,       \/\/ 通用寄存器2读数据$/;"	p	module:id_ex
reg2_rdata_o	rtl/core/id.v	/^    output reg[`RegBus] reg2_rdata_o,        \/\/ 通用寄存器2数据$/;"	p	module:id
reg2_rdata_o	rtl/core/id_ex.v	/^    output wire[`RegBus] reg2_rdata_o,       \/\/ 通用寄存器2读数据$/;"	p	module:id_ex
reg_addr_o	rtl/debug/jtag_top.v	/^    output wire[4:0] reg_addr_o,$/;"	p	module:jtag_top
reg_ctrl	rtl/perips/gpio.v	/^    output wire[31:0] reg_ctrl,$/;"	p	module:gpio
reg_data	rtl/perips/gpio.v	/^    output wire[31:0] reg_data$/;"	p	module:gpio
reg_rdata_i	rtl/debug/jtag_top.v	/^    input wire[31:0] reg_rdata_i,$/;"	p	module:jtag_top
reg_waddr	rtl/core/ex.v	/^    reg[`RegAddrBus] reg_waddr;$/;"	r	module:ex
reg_waddr	rtl/core/id_ex.v	/^    wire[`RegAddrBus] reg_waddr;$/;"	n	module:id_ex
reg_waddr_ff	rtl/core/id_ex.v	/^    gen_pipe_dff #(5) reg_waddr_ff(clk, rst, hold_en, `ZeroReg, reg_waddr_i, reg_waddr);$/;"	i	module:id_ex	typeref:module:gen_pipe_dff
reg_waddr_i	rtl/core/div.v	/^    input wire[`RegAddrBus] reg_waddr_i, \/\/ 运算结束后需要写的寄存器$/;"	p	module:div
reg_waddr_i	rtl/core/ex.v	/^    input wire[`RegAddrBus] reg_waddr_i,    \/\/ 写通用寄存器地址$/;"	p	module:ex
reg_waddr_i	rtl/core/id_ex.v	/^    input wire[`RegAddrBus] reg_waddr_i,    \/\/ 写通用寄存器地址$/;"	p	module:id_ex
reg_waddr_o	rtl/core/div.v	/^    output reg[`RegAddrBus] reg_waddr_o  \/\/ 运算结束后需要写的寄存器$/;"	p	module:div
reg_waddr_o	rtl/core/ex.v	/^    output wire[`RegAddrBus] reg_waddr_o,   \/\/ 写通用寄存器地址$/;"	p	module:ex
reg_waddr_o	rtl/core/id.v	/^    output reg[`RegAddrBus] reg_waddr_o,     \/\/ 写通用寄存器地址$/;"	p	module:id
reg_waddr_o	rtl/core/id_ex.v	/^    output wire[`RegAddrBus] reg_waddr_o,    \/\/ 写通用寄存器地址$/;"	p	module:id_ex
reg_wdata	rtl/core/ex.v	/^    reg[`RegBus] reg_wdata;$/;"	r	module:ex
reg_wdata_o	rtl/core/ex.v	/^    output wire[`RegBus] reg_wdata_o,       \/\/ 写寄存器数据$/;"	p	module:ex
reg_wdata_o	rtl/debug/jtag_top.v	/^    output wire[31:0] reg_wdata_o,$/;"	p	module:jtag_top
reg_we	rtl/core/ex.v	/^    reg reg_we;$/;"	r	module:ex
reg_we	rtl/core/id_ex.v	/^    wire reg_we;$/;"	n	module:id_ex
reg_we_ff	rtl/core/id_ex.v	/^    gen_pipe_dff #(1) reg_we_ff(clk, rst, hold_en, `WriteDisable, reg_we_i, reg_we);$/;"	i	module:id_ex	typeref:module:gen_pipe_dff
reg_we_i	rtl/core/ex.v	/^    input wire reg_we_i,                    \/\/ 是否写通用寄存器$/;"	p	module:ex
reg_we_i	rtl/core/id_ex.v	/^    input wire reg_we_i,                    \/\/ 写通用寄存器标志$/;"	p	module:id_ex
reg_we_o	rtl/core/ex.v	/^    output wire reg_we_o,                   \/\/ 是否要写通用寄存器$/;"	p	module:ex
reg_we_o	rtl/core/id.v	/^    output reg reg_we_o,                     \/\/ 写通用寄存器标志$/;"	p	module:id
reg_we_o	rtl/core/id_ex.v	/^    output wire reg_we_o,                    \/\/ 写通用寄存器标志$/;"	p	module:id_ex
reg_we_o	rtl/debug/jtag_top.v	/^    output wire reg_we_o,$/;"	p	module:jtag_top
regs	rtl/core/regs.v	/^    reg[`RegBus] regs[0:`RegNum - 1];$/;"	r	module:regs
regs	rtl/core/regs.v	/^module regs($/;"	m
regs_rdata1_o	rtl/core/tinyriscv.v	/^    wire[`RegBus] regs_rdata1_o;$/;"	n	module:tinyriscv
regs_rdata2_o	rtl/core/tinyriscv.v	/^    wire[`RegBus] regs_rdata2_o;$/;"	n	module:tinyriscv
remain_packet_count	rtl/debug/uart_debug.v	/^    reg[15:0] remain_packet_count;$/;"	r	module:uart_debug
req	rtl/core/rib.v	/^    wire[3:0] req;$/;"	n	module:rib
req	rtl/utils/full_handshake_rx.v	/^    reg req;$/;"	r	module:full_handshake_rx
req	rtl/utils/full_handshake_tx.v	/^    reg req;$/;"	r	module:full_handshake_tx
req_d	rtl/utils/full_handshake_rx.v	/^    reg req_d;$/;"	r	module:full_handshake_rx
req_data	rtl/utils/full_handshake_tx.v	/^    reg[DW-1:0] req_data;$/;"	r	module:full_handshake_tx
req_data_i	rtl/utils/full_handshake_rx.v	/^    input wire[DW-1:0] req_data_i,  \/\/ TX端输入数据$/;"	p	module:full_handshake_rx
req_data_i	rtl/utils/full_handshake_tx.v	/^    input wire[DW-1:0] req_data_i,  \/\/ TX端要发送的数据，只需持续一个时钟$/;"	p	module:full_handshake_tx
req_data_o	rtl/utils/full_handshake_tx.v	/^    output wire[DW-1:0] req_data_o  \/\/ TX端要发送的数据$/;"	p	module:full_handshake_tx
req_i	rtl/utils/full_handshake_rx.v	/^    input wire req_i,               \/\/ TX端请求信号$/;"	p	module:full_handshake_rx
req_i	rtl/utils/full_handshake_tx.v	/^    input wire req_i,               \/\/ TX端请求信号，只需持续一个时钟$/;"	p	module:full_handshake_tx
req_o	rtl/debug/uart_debug.v	/^    output wire req_o,$/;"	p	module:uart_debug
req_o	rtl/utils/full_handshake_tx.v	/^    output wire req_o,              \/\/ TX端请求信号$/;"	p	module:full_handshake_tx
reset_req_o	rtl/debug/jtag_top.v	/^    output wire reset_req_o$/;"	p	module:jtag_top
result_o	rtl/core/div.v	/^    output reg[`RegBus] result_o,        \/\/ 除法结果，高32位是余数，低32位是商$/;"	p	module:div
rib	rtl/core/rib.v	/^module rib($/;"	m
rib_ex_addr_o	rtl/core/tinyriscv.v	/^    output wire[`MemAddrBus] rib_ex_addr_o,    \/\/ 读、写外设的地址$/;"	p	module:tinyriscv
rib_ex_data_i	rtl/core/tinyriscv.v	/^    input wire[`MemBus] rib_ex_data_i,         \/\/ 从外设读取的数据$/;"	p	module:tinyriscv
rib_ex_data_o	rtl/core/tinyriscv.v	/^    output wire[`MemBus] rib_ex_data_o,        \/\/ 写入外设的数据$/;"	p	module:tinyriscv
rib_ex_req_o	rtl/core/tinyriscv.v	/^    output wire rib_ex_req_o,                  \/\/ 访问外设请求$/;"	p	module:tinyriscv
rib_ex_we_o	rtl/core/tinyriscv.v	/^    output wire rib_ex_we_o,                   \/\/ 写外设标志$/;"	p	module:tinyriscv
rib_hold_flag_i	rtl/core/tinyriscv.v	/^    input wire rib_hold_flag_i,                \/\/ 总线暂停标志$/;"	p	module:tinyriscv
rib_hold_flag_o	rtl/soc/tinyriscv_soc_top.v	/^    wire rib_hold_flag_o;$/;"	n	module:tinyriscv_soc_top
rib_pc_addr_o	rtl/core/tinyriscv.v	/^    output wire[`MemAddrBus] rib_pc_addr_o,    \/\/ 取指地址$/;"	p	module:tinyriscv
rib_pc_data_i	rtl/core/tinyriscv.v	/^    input wire[`MemBus] rib_pc_data_i,         \/\/ 取到的指令内容$/;"	p	module:tinyriscv
rom	rtl/perips/rom.v	/^module rom($/;"	m
rs1	rtl/core/id.v	/^    wire[4:0] rs1 = inst_i[19:15];$/;"	n	module:id
rs2	rtl/core/id.v	/^    wire[4:0] rs2 = inst_i[24:20];$/;"	n	module:id
rst	rtl/core/clint.v	/^    input wire rst,$/;"	p	module:clint
rst	rtl/core/csr_reg.v	/^    input wire rst,$/;"	p	module:csr_reg
rst	rtl/core/ctrl.v	/^    input wire rst,$/;"	p	module:ctrl
rst	rtl/core/div.v	/^    input wire rst,$/;"	p	module:div
rst	rtl/core/ex.v	/^    input wire rst,$/;"	p	module:ex
rst	rtl/core/id.v	/^	input wire rst,$/;"	p	module:id
rst	rtl/core/id_ex.v	/^    input wire rst,$/;"	p	module:id_ex
rst	rtl/core/if_id.v	/^    input wire rst,$/;"	p	module:if_id
rst	rtl/core/pc_reg.v	/^    input wire rst,$/;"	p	module:pc_reg
rst	rtl/core/regs.v	/^    input wire rst,$/;"	p	module:regs
rst	rtl/core/rib.v	/^    input wire rst,$/;"	p	module:rib
rst	rtl/core/tinyriscv.v	/^    input wire rst,$/;"	p	module:tinyriscv
rst	rtl/debug/uart_debug.v	/^    input wire rst,                \/\/ 复位信号$/;"	p	module:uart_debug
rst	rtl/perips/I2C.v	/^    input   rst,$/;"	p	module:I2C
rst	rtl/perips/PWM.v	/^    input   rst,$/;"	p	module:PWM
rst	rtl/perips/gpio.v	/^	input wire rst,$/;"	p	module:gpio
rst	rtl/perips/ram.v	/^    input wire rst,$/;"	p	module:ram
rst	rtl/perips/rom.v	/^    input wire rst,$/;"	p	module:rom
rst	rtl/perips/spi.v	/^    input wire rst,$/;"	p	module:spi
rst	rtl/perips/timer.v	/^    input wire rst,$/;"	p	module:timer
rst	rtl/perips/uart.v	/^	input wire rst,$/;"	p	module:uart
rst	rtl/soc/tinyriscv_soc_top.v	/^    input wire rst,$/;"	p	module:tinyriscv_soc_top
rst	rtl/utils/gen_buf.v	/^    input wire rst,$/;"	p	module:gen_ticks_sync
rst	rtl/utils/gen_dff.v	/^    input wire rst,$/;"	p	module:gen_en_dff
rst	rtl/utils/gen_dff.v	/^    input wire rst,$/;"	p	module:gen_pipe_dff
rst	rtl/utils/gen_dff.v	/^    input wire rst,$/;"	p	module:gen_rst_0_dff
rst	rtl/utils/gen_dff.v	/^    input wire rst,$/;"	p	module:gen_rst_1_dff
rst	rtl/utils/gen_dff.v	/^    input wire rst,$/;"	p	module:gen_rst_def_dff
rst_0_dff	rtl/utils/gen_buf.v	/^                gen_rst_0_dff #(DW) rst_0_dff(clk, rst, din, sync_dat[0]);$/;"	i	block:gen_ticks_sync.dp_width.dp_is_0	typeref:module:gen_rst_0_dff
rst_0_dff	rtl/utils/gen_buf.v	/^                gen_rst_0_dff #(DW) rst_0_dff(clk, rst, sync_dat[i-1], sync_dat[i]);$/;"	i	block:gen_ticks_sync.dp_width.dp_is_not_0	typeref:module:gen_rst_0_dff
rst_n	rtl/debug/jtag_dm.v	/^    input wire rst_n;$/;"	p	module:jtag_dm
rst_n	rtl/debug/jtag_driver.v	/^    input wire rst_n;$/;"	p	module:jtag_driver
rst_n	rtl/utils/full_handshake_rx.v	/^    input wire rst_n,               \/\/ RX端复位信号$/;"	p	module:full_handshake_rx
rst_n	rtl/utils/full_handshake_tx.v	/^    input wire rst_n,               \/\/ TX端复位信号$/;"	p	module:full_handshake_tx
rx	rtl/debug/jtag_dm.v	/^    ) rx($/;"	i	module:jtag_dm	typeref:module:full_handshake_rx
rx	rtl/debug/jtag_driver.v	/^    ) rx($/;"	i	module:jtag_driver	typeref:module:full_handshake_rx
rx_clk_cnt	rtl/perips/uart.v	/^    reg[15:0] rx_clk_cnt;$/;"	r	module:uart
rx_clk_edge_cnt	rtl/perips/uart.v	/^    reg[3:0] rx_clk_edge_cnt;          \/\/ clk时钟沿的个数$/;"	r	module:uart
rx_clk_edge_level	rtl/perips/uart.v	/^    reg rx_clk_edge_level;             \/\/ clk沿电平$/;"	r	module:uart
rx_data	rtl/debug/jtag_dm.v	/^    wire[DTM_REQ_BITS-1:0] rx_data;$/;"	n	module:jtag_dm
rx_data	rtl/debug/jtag_driver.v	/^    wire[DM_RESP_BITS - 1:0] rx_data;$/;"	n	module:jtag_driver
rx_data	rtl/debug/uart_debug.v	/^    reg[7:0] rx_data[0:34];$/;"	r	module:uart_debug
rx_data	rtl/perips/uart.v	/^    reg[7:0] rx_data;$/;"	r	module:uart
rx_div_cnt	rtl/perips/uart.v	/^    reg[15:0] rx_div_cnt;$/;"	r	module:uart
rx_done	rtl/perips/uart.v	/^    reg rx_done;$/;"	r	module:uart
rx_negedge	rtl/perips/uart.v	/^    wire rx_negedge;$/;"	n	module:uart
rx_over	rtl/perips/uart.v	/^    reg rx_over;$/;"	r	module:uart
rx_pin	rtl/perips/uart.v	/^    input wire rx_pin,$/;"	p	module:uart
rx_q0	rtl/perips/uart.v	/^    reg rx_q0;$/;"	r	module:uart
rx_q1	rtl/perips/uart.v	/^    reg rx_q1;$/;"	r	module:uart
rx_start	rtl/perips/uart.v	/^    reg rx_start;                      \/\/ RX使能$/;"	r	module:uart
rx_valid	rtl/debug/jtag_dm.v	/^    wire rx_valid;$/;"	n	module:jtag_dm
rx_valid	rtl/debug/jtag_driver.v	/^    wire rx_valid;$/;"	n	module:jtag_driver
s0_addr_o	rtl/core/rib.v	/^    output reg[`MemAddrBus] s0_addr_o,     \/\/ 从设备0读、写地址$/;"	p	module:rib
s0_addr_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemAddrBus] s0_addr_o;$/;"	n	module:tinyriscv_soc_top
s0_data_i	rtl/core/rib.v	/^    input wire[`MemBus] s0_data_i,         \/\/ 从设备0读取到的数据$/;"	p	module:rib
s0_data_i	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] s0_data_i;$/;"	n	module:tinyriscv_soc_top
s0_data_o	rtl/core/rib.v	/^    output reg[`MemBus] s0_data_o,         \/\/ 从设备0写数据$/;"	p	module:rib
s0_data_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] s0_data_o;$/;"	n	module:tinyriscv_soc_top
s0_we_o	rtl/core/rib.v	/^    output reg s0_we_o,                    \/\/ 从设备0写标志$/;"	p	module:rib
s0_we_o	rtl/soc/tinyriscv_soc_top.v	/^    wire s0_we_o;$/;"	n	module:tinyriscv_soc_top
s1_addr_o	rtl/core/rib.v	/^    output reg[`MemAddrBus] s1_addr_o,     \/\/ 从设备1读、写地址$/;"	p	module:rib
s1_addr_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemAddrBus] s1_addr_o;$/;"	n	module:tinyriscv_soc_top
s1_data_i	rtl/core/rib.v	/^    input wire[`MemBus] s1_data_i,         \/\/ 从设备1读取到的数据$/;"	p	module:rib
s1_data_i	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] s1_data_i;$/;"	n	module:tinyriscv_soc_top
s1_data_o	rtl/core/rib.v	/^    output reg[`MemBus] s1_data_o,         \/\/ 从设备1写数据$/;"	p	module:rib
s1_data_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] s1_data_o;$/;"	n	module:tinyriscv_soc_top
s1_we_o	rtl/core/rib.v	/^    output reg s1_we_o,                    \/\/ 从设备1写标志$/;"	p	module:rib
s1_we_o	rtl/soc/tinyriscv_soc_top.v	/^    wire s1_we_o;$/;"	n	module:tinyriscv_soc_top
s2_addr_o	rtl/core/rib.v	/^    output reg[`MemAddrBus] s2_addr_o,     \/\/ 从设备2读、写地址$/;"	p	module:rib
s2_addr_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemAddrBus] s2_addr_o;$/;"	n	module:tinyriscv_soc_top
s2_data_i	rtl/core/rib.v	/^    input wire[`MemBus] s2_data_i,         \/\/ 从设备2读取到的数据$/;"	p	module:rib
s2_data_i	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] s2_data_i;$/;"	n	module:tinyriscv_soc_top
s2_data_o	rtl/core/rib.v	/^    output reg[`MemBus] s2_data_o,         \/\/ 从设备2写数据$/;"	p	module:rib
s2_data_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] s2_data_o;$/;"	n	module:tinyriscv_soc_top
s2_we_o	rtl/core/rib.v	/^    output reg s2_we_o,                    \/\/ 从设备2写标志$/;"	p	module:rib
s2_we_o	rtl/soc/tinyriscv_soc_top.v	/^    wire s2_we_o;$/;"	n	module:tinyriscv_soc_top
s3_addr_o	rtl/core/rib.v	/^    output reg[`MemAddrBus] s3_addr_o,     \/\/ 从设备3读、写地址$/;"	p	module:rib
s3_addr_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemAddrBus] s3_addr_o;$/;"	n	module:tinyriscv_soc_top
s3_data_i	rtl/core/rib.v	/^    input wire[`MemBus] s3_data_i,         \/\/ 从设备3读取到的数据$/;"	p	module:rib
s3_data_i	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] s3_data_i;$/;"	n	module:tinyriscv_soc_top
s3_data_o	rtl/core/rib.v	/^    output reg[`MemBus] s3_data_o,         \/\/ 从设备3写数据$/;"	p	module:rib
s3_data_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] s3_data_o;$/;"	n	module:tinyriscv_soc_top
s3_we_o	rtl/core/rib.v	/^    output reg s3_we_o,                    \/\/ 从设备3写标志$/;"	p	module:rib
s3_we_o	rtl/soc/tinyriscv_soc_top.v	/^    wire s3_we_o;$/;"	n	module:tinyriscv_soc_top
s4_addr_o	rtl/core/rib.v	/^    output reg[`MemAddrBus] s4_addr_o,     \/\/ 从设备4读、写地址$/;"	p	module:rib
s4_addr_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemAddrBus] s4_addr_o;$/;"	n	module:tinyriscv_soc_top
s4_data_i	rtl/core/rib.v	/^    input wire[`MemBus] s4_data_i,         \/\/ 从设备4读取到的数据$/;"	p	module:rib
s4_data_i	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] s4_data_i;$/;"	n	module:tinyriscv_soc_top
s4_data_o	rtl/core/rib.v	/^    output reg[`MemBus] s4_data_o,         \/\/ 从设备4写数据$/;"	p	module:rib
s4_data_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] s4_data_o;$/;"	n	module:tinyriscv_soc_top
s4_we_o	rtl/core/rib.v	/^    output reg s4_we_o,                    \/\/ 从设备4写标志$/;"	p	module:rib
s4_we_o	rtl/soc/tinyriscv_soc_top.v	/^    wire s4_we_o;$/;"	n	module:tinyriscv_soc_top
s5_addr_o	rtl/core/rib.v	/^    output reg[`MemAddrBus] s5_addr_o,     \/\/ 从设备5读、写地址$/;"	p	module:rib
s5_addr_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemAddrBus] s5_addr_o;$/;"	n	module:tinyriscv_soc_top
s5_data_i	rtl/core/rib.v	/^    input wire[`MemBus] s5_data_i,         \/\/ 从设备5读取到的数据$/;"	p	module:rib
s5_data_i	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] s5_data_i;$/;"	n	module:tinyriscv_soc_top
s5_data_o	rtl/core/rib.v	/^    output reg[`MemBus] s5_data_o,         \/\/ 从设备5写数据$/;"	p	module:rib
s5_data_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] s5_data_o;$/;"	n	module:tinyriscv_soc_top
s5_we_o	rtl/core/rib.v	/^    output reg s5_we_o,                    \/\/ 从设备5写标志$/;"	p	module:rib
s5_we_o	rtl/soc/tinyriscv_soc_top.v	/^    wire s5_we_o;$/;"	n	module:tinyriscv_soc_top
s6_addr_o	rtl/core/rib.v	/^    output reg[`MemAddrBus] s6_addr_o,$/;"	p	module:rib
s6_addr_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemAddrBus] s6_addr_o;$/;"	n	module:tinyriscv_soc_top
s6_data_i	rtl/core/rib.v	/^    input wire[`MemBus] s6_data_i,$/;"	p	module:rib
s6_data_o	rtl/core/rib.v	/^    output reg[`MemBus] s6_data_o,$/;"	p	module:rib
s6_data_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] s6_data_o;$/;"	n	module:tinyriscv_soc_top
s6_we_o	rtl/core/rib.v	/^    output reg s6_we_o,$/;"	p	module:rib
s6_we_o	rtl/soc/tinyriscv_soc_top.v	/^    wire s6_we_o;$/;"	n	module:tinyriscv_soc_top
s7_addr_o	rtl/core/rib.v	/^    output reg[`MemAddrBus] s7_addr_o,$/;"	p	module:rib
s7_addr_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemAddrBus] s7_addr_o;$/;"	n	module:tinyriscv_soc_top
s7_data_i	rtl/core/rib.v	/^    input wire[`MemBus] s7_data_i,$/;"	p	module:rib
s7_data_i	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] s7_data_i;$/;"	n	module:tinyriscv_soc_top
s7_data_o	rtl/core/rib.v	/^    output reg[`MemBus] s7_data_o,$/;"	p	module:rib
s7_data_o	rtl/soc/tinyriscv_soc_top.v	/^    wire[`MemBus] s7_data_o;$/;"	n	module:tinyriscv_soc_top
s7_we_o	rtl/core/rib.v	/^    output reg s7_we_o,$/;"	p	module:rib
s7_we_o	rtl/soc/tinyriscv_soc_top.v	/^    wire s7_we_o;$/;"	n	module:tinyriscv_soc_top
sbaddress0	rtl/debug/jtag_dm.v	/^    reg[31:0] sbaddress0;$/;"	r	module:jtag_dm
sbaddress0_next	rtl/debug/jtag_dm.v	/^    wire[31:0] sbaddress0_next = sbaddress0 + 4;$/;"	n	module:jtag_dm
sbcs	rtl/debug/jtag_dm.v	/^    reg[31:0] sbcs;$/;"	r	module:jtag_dm
sbdata0	rtl/debug/jtag_dm.v	/^    reg[31:0] sbdata0;$/;"	r	module:jtag_dm
shift_reg	rtl/debug/jtag_driver.v	/^    reg[SHIFT_REG_BITS - 1:0] shift_reg;$/;"	r	module:jtag_driver
slave_0	rtl/core/rib.v	/^    parameter [3:0]slave_0 = 4'b0000;$/;"	c	module:rib
slave_1	rtl/core/rib.v	/^    parameter [3:0]slave_1 = 4'b0001;$/;"	c	module:rib
slave_2	rtl/core/rib.v	/^    parameter [3:0]slave_2 = 4'b0010;$/;"	c	module:rib
slave_3	rtl/core/rib.v	/^    parameter [3:0]slave_3 = 4'b0011;$/;"	c	module:rib
slave_4	rtl/core/rib.v	/^    parameter [3:0]slave_4 = 4'b0100;$/;"	c	module:rib
slave_5	rtl/core/rib.v	/^    parameter [3:0]slave_5 = 4'b0101;$/;"	c	module:rib
slave_6	rtl/core/rib.v	/^    parameter [3:0]slave_6 = 4'b0110;$/;"	c	module:rib
slave_7	rtl/core/rib.v	/^    parameter [3:0]slave_7 = 4'b0111;$/;"	c	module:rib
spi	rtl/perips/spi.v	/^module spi($/;"	m
spi_0	rtl/soc/tinyriscv_soc_top.v	/^    spi spi_0($/;"	i	module:tinyriscv_soc_top	typeref:module:spi
spi_clk	rtl/perips/spi.v	/^    output reg spi_clk               \/\/ spi设备时钟，最大频率为输入clk的一半$/;"	p	module:spi
spi_clk	rtl/soc/tinyriscv_soc_top.v	/^    output wire spi_clk,      \/\/ SPI CLK引脚$/;"	p	module:tinyriscv_soc_top
spi_clk_edge_cnt	rtl/perips/spi.v	/^    reg[4:0] spi_clk_edge_cnt;      \/\/ spi clk时钟沿的个数$/;"	r	module:spi
spi_clk_edge_level	rtl/perips/spi.v	/^    reg spi_clk_edge_level;         \/\/ spi clk沿电平$/;"	r	module:spi
spi_ctrl	rtl/perips/spi.v	/^    reg[31:0] spi_ctrl;$/;"	r	module:spi
spi_data	rtl/perips/spi.v	/^    reg[31:0] spi_data;$/;"	r	module:spi
spi_miso	rtl/perips/spi.v	/^    input wire spi_miso,             \/\/ spi控制器输入、spi设备输出信号$/;"	p	module:spi
spi_miso	rtl/soc/tinyriscv_soc_top.v	/^    input wire spi_miso,     \/\/ SPI MISO引脚$/;"	p	module:tinyriscv_soc_top
spi_mosi	rtl/perips/spi.v	/^    output reg spi_mosi,             \/\/ spi控制器输出、spi设备输入信号$/;"	p	module:spi
spi_mosi	rtl/soc/tinyriscv_soc_top.v	/^    output wire spi_mosi,    \/\/ SPI MOSI引脚$/;"	p	module:tinyriscv_soc_top
spi_ss	rtl/perips/spi.v	/^    output wire spi_ss,              \/\/ spi设备片选$/;"	p	module:spi
spi_ss	rtl/soc/tinyriscv_soc_top.v	/^    output wire spi_ss,      \/\/ SPI SS引脚$/;"	p	module:tinyriscv_soc_top
spi_status	rtl/perips/spi.v	/^    reg[31:0] spi_status;$/;"	r	module:spi
sr_shift	rtl/core/ex.v	/^    wire[31:0] sr_shift;$/;"	n	module:ex
sr_shift_mask	rtl/core/ex.v	/^    wire[31:0] sr_shift_mask;$/;"	n	module:ex
sri_shift	rtl/core/ex.v	/^    wire[31:0] sri_shift;$/;"	n	module:ex
sri_shift_mask	rtl/core/ex.v	/^    wire[31:0] sri_shift_mask;$/;"	n	module:ex
start_i	rtl/core/div.v	/^    input wire start_i,                  \/\/ 开始信号，运算期间这个信号需要一直/;"	p	module:div
state	rtl/core/div.v	/^    reg[3:0] state;$/;"	r	module:div
state	rtl/debug/uart_debug.v	/^    reg[13:0] state;$/;"	r	module:uart_debug
state	rtl/perips/uart.v	/^    reg[3:0] state;$/;"	r	module:uart
state	rtl/utils/full_handshake_rx.v	/^    reg[1:0] state;$/;"	r	module:full_handshake_rx
state	rtl/utils/full_handshake_tx.v	/^    reg[2:0] state;$/;"	r	module:full_handshake_tx
state_next	rtl/utils/full_handshake_rx.v	/^    reg[1:0] state_next;$/;"	r	module:full_handshake_rx
state_next	rtl/utils/full_handshake_tx.v	/^    reg[2:0] state_next;$/;"	r	module:full_handshake_tx
sticky_busy	rtl/debug/jtag_driver.v	/^    reg sticky_busy;$/;"	r	module:jtag_driver
succ	rtl/soc/tinyriscv_soc_top.v	/^    output reg succ,         \/\/ 测试是否成功信号$/;"	p	module:tinyriscv_soc_top
sync_dat	rtl/utils/gen_buf.v	/^    wire[DW-1:0] sync_dat[DP-1:0];$/;"	n	module:gen_ticks_sync
timer	rtl/perips/timer.v	/^module timer($/;"	m
timer0_int	rtl/soc/tinyriscv_soc_top.v	/^    wire timer0_int;$/;"	n	module:tinyriscv_soc_top
timer_0	rtl/soc/tinyriscv_soc_top.v	/^    timer timer_0($/;"	i	module:tinyriscv_soc_top	typeref:module:timer
timer_count	rtl/perips/timer.v	/^    reg[31:0] timer_count;$/;"	r	module:timer
timer_ctrl	rtl/perips/timer.v	/^    reg[31:0] timer_ctrl;$/;"	r	module:timer
timer_value	rtl/perips/timer.v	/^    reg[31:0] timer_value;$/;"	r	module:timer
tinyriscv	rtl/core/tinyriscv.v	/^module tinyriscv($/;"	m
tinyriscv_soc_top	rtl/soc/tinyriscv_soc_top.v	/^module tinyriscv_soc_top($/;"	m
tx	rtl/debug/jtag_dm.v	/^    ) tx($/;"	i	module:jtag_dm	typeref:module:full_handshake_tx
tx	rtl/debug/jtag_driver.v	/^    ) tx($/;"	i	module:jtag_driver	typeref:module:full_handshake_tx
tx_data	rtl/debug/jtag_driver.v	/^    wire[DTM_REQ_BITS - 1:0] tx_data;$/;"	n	module:jtag_driver
tx_data	rtl/perips/uart.v	/^    reg[7:0] tx_data;$/;"	r	module:uart
tx_data_ready	rtl/perips/uart.v	/^    reg tx_data_ready;$/;"	r	module:uart
tx_data_valid	rtl/perips/uart.v	/^    reg tx_data_valid;$/;"	r	module:uart
tx_idle	rtl/debug/jtag_driver.v	/^    wire tx_idle;$/;"	n	module:jtag_driver
tx_pin	rtl/perips/uart.v	/^	output wire tx_pin,$/;"	p	module:uart
tx_reg	rtl/perips/uart.v	/^    reg tx_reg;$/;"	r	module:uart
tx_valid	rtl/debug/jtag_driver.v	/^    wire tx_valid;$/;"	n	module:jtag_driver
u_clint	rtl/core/tinyriscv.v	/^    clint u_clint($/;"	i	module:tinyriscv	typeref:module:clint
u_csr_reg	rtl/core/tinyriscv.v	/^    csr_reg u_csr_reg($/;"	i	module:tinyriscv	typeref:module:csr_reg
u_ctrl	rtl/core/tinyriscv.v	/^    ctrl u_ctrl($/;"	i	module:tinyriscv	typeref:module:ctrl
u_div	rtl/core/tinyriscv.v	/^    div u_div($/;"	i	module:tinyriscv	typeref:module:div
u_ex	rtl/core/tinyriscv.v	/^    ex u_ex($/;"	i	module:tinyriscv	typeref:module:ex
u_id	rtl/core/tinyriscv.v	/^    id u_id($/;"	i	module:tinyriscv	typeref:module:id
u_id_ex	rtl/core/tinyriscv.v	/^    id_ex u_id_ex($/;"	i	module:tinyriscv	typeref:module:id_ex
u_if_id	rtl/core/tinyriscv.v	/^    if_id u_if_id($/;"	i	module:tinyriscv	typeref:module:if_id
u_jtag_dm	rtl/debug/jtag_top.v	/^    ) u_jtag_dm($/;"	i	module:jtag_top	typeref:module:jtag_dm
u_jtag_driver	rtl/debug/jtag_top.v	/^    ) u_jtag_driver($/;"	i	module:jtag_top	typeref:module:jtag_driver
u_jtag_top	rtl/soc/tinyriscv_soc_top.v	/^    ) u_jtag_top($/;"	i	module:tinyriscv_soc_top	typeref:module:jtag_top
u_pc_reg	rtl/core/tinyriscv.v	/^    pc_reg u_pc_reg($/;"	i	module:tinyriscv	typeref:module:pc_reg
u_ram	rtl/soc/tinyriscv_soc_top.v	/^    ram u_ram($/;"	i	module:tinyriscv_soc_top	typeref:module:ram
u_regs	rtl/core/tinyriscv.v	/^    regs u_regs($/;"	i	module:tinyriscv	typeref:module:regs
u_rib	rtl/soc/tinyriscv_soc_top.v	/^    rib u_rib($/;"	i	module:tinyriscv_soc_top	typeref:module:rib
u_rom	rtl/soc/tinyriscv_soc_top.v	/^    rom u_rom($/;"	i	module:tinyriscv_soc_top	typeref:module:rom
u_tinyriscv	rtl/soc/tinyriscv_soc_top.v	/^    tinyriscv u_tinyriscv($/;"	i	module:tinyriscv_soc_top	typeref:module:tinyriscv
u_uart_debug	rtl/soc/tinyriscv_soc_top.v	/^    uart_debug u_uart_debug($/;"	i	module:tinyriscv_soc_top	typeref:module:uart_debug
uart	rtl/perips/uart.v	/^module uart($/;"	m
uart_0	rtl/soc/tinyriscv_soc_top.v	/^    uart uart_0($/;"	i	module:tinyriscv_soc_top	typeref:module:uart
uart_baud	rtl/perips/uart.v	/^    reg[31:0] uart_baud;$/;"	r	module:uart
uart_busy_current	rtl/core/ex.v	/^    reg uart_busy_current;$/;"	r	module:ex
uart_busy_next	rtl/core/ex.v	/^    reg uart_busy_next;$/;"	r	module:ex
uart_ctrl	rtl/perips/uart.v	/^    reg[31:0] uart_ctrl;$/;"	r	module:uart
uart_debug	rtl/debug/uart_debug.v	/^module uart_debug($/;"	m
uart_debug_pin	rtl/soc/tinyriscv_soc_top.v	/^    input wire uart_debug_pin, \/\/ 串口下载使能引脚$/;"	p	module:tinyriscv_soc_top
uart_rx	rtl/perips/uart.v	/^    reg[31:0] uart_rx;$/;"	r	module:uart
uart_rx_pin	rtl/soc/tinyriscv_soc_top.v	/^    input wire uart_rx_pin,  \/\/ UART接收引脚$/;"	p	module:tinyriscv_soc_top
uart_status	rtl/perips/uart.v	/^    reg[31:0] uart_status;$/;"	r	module:uart
uart_tx_pin	rtl/soc/tinyriscv_soc_top.v	/^    output wire uart_tx_pin, \/\/ UART发送引脚$/;"	p	module:tinyriscv_soc_top
uimm	rtl/core/ex.v	/^    wire[4:0] uimm;$/;"	n	module:ex
waddr_i	rtl/core/csr_reg.v	/^    input wire[`MemAddrBus] waddr_i,        \/\/ ex模块写寄存器地址$/;"	p	module:csr_reg
waddr_i	rtl/core/regs.v	/^    input wire[`RegAddrBus] waddr_i,      \/\/ 写寄存器地址$/;"	p	module:regs
waddr_o	rtl/core/clint.v	/^    output reg[`MemAddrBus] waddr_o,         \/\/ 写CSR寄存器地址$/;"	p	module:clint
wdata_i	rtl/core/regs.v	/^    input wire[`RegBus] wdata_i,          \/\/ 写寄存器数据$/;"	p	module:regs
we_i	rtl/core/csr_reg.v	/^    input wire we_i,                        \/\/ ex模块写寄存器标志$/;"	p	module:csr_reg
we_i	rtl/core/regs.v	/^    input wire we_i,                      \/\/ 写寄存器标志$/;"	p	module:regs
we_i	rtl/perips/I2C.v	/^    input   we_i,$/;"	p	module:I2C
we_i	rtl/perips/PWM.v	/^    input   we_i,$/;"	p	module:PWM
we_i	rtl/perips/gpio.v	/^    input wire we_i,$/;"	p	module:gpio
we_i	rtl/perips/ram.v	/^    input wire we_i,                   \/\/ write enable$/;"	p	module:ram
we_i	rtl/perips/rom.v	/^    input wire we_i,                   \/\/ write enable$/;"	p	module:rom
we_i	rtl/perips/spi.v	/^    input wire we_i,$/;"	p	module:spi
we_i	rtl/perips/timer.v	/^    input wire we_i,$/;"	p	module:timer
we_i	rtl/perips/uart.v	/^    input wire we_i,$/;"	p	module:uart
we_o	rtl/core/clint.v	/^    output reg we_o,                         \/\/ 写CSR寄存器标志$/;"	p	module:clint
write_addr	rtl/perips/I2C.v	/^    input   [31:0]      write_addr,$/;"	p	module:I2C
write_addr	rtl/perips/PWM.v	/^    input   [31:0]      write_addr,$/;"	p	module:PWM
write_data	rtl/perips/I2C.v	/^    input   [31:0]      write_data,$/;"	p	module:I2C
write_data	rtl/perips/PWM.v	/^    input   [31:0]      write_data,$/;"	p	module:PWM
write_mem_addr	rtl/debug/uart_debug.v	/^    reg[31:0] write_mem_addr;$/;"	r	module:uart_debug
write_mem_byte_index0	rtl/debug/uart_debug.v	/^    reg[7:0] write_mem_byte_index0;$/;"	r	module:uart_debug
write_mem_byte_index1	rtl/debug/uart_debug.v	/^    reg[7:0] write_mem_byte_index1;$/;"	r	module:uart_debug
write_mem_byte_index2	rtl/debug/uart_debug.v	/^    reg[7:0] write_mem_byte_index2;$/;"	r	module:uart_debug
write_mem_byte_index3	rtl/debug/uart_debug.v	/^    reg[7:0] write_mem_byte_index3;$/;"	r	module:uart_debug
write_mem_data	rtl/debug/uart_debug.v	/^    reg[31:0] write_mem_data;$/;"	r	module:uart_debug
后续工作计划：	README.md	/^### 后续工作计划：$/;"	S
